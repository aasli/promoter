ylimits_histogram, df_list, label_list[c(3:5,8:10)]),
USE.NAMES = TRUE, SIMPLIFY = FALSE)
names(histograms)<-strain_names
names(histograms)<-strain_names[c(1,2,6,7)]
### making the grids
name_list_histogram<-strain_names # should contain one name per strain that you want
#to create a grid for.
label_list_histogram<-label_list # should contain one label per grid,
#and the order of the labels must correspond to the order in which the strains appear in name_list.
names(label_list_histogram)<-name_list_histogram
# apply the grid function to create a new list with the grids,
#and name these using the name_list so that you can later save them using the names.
grid_plots_histogram<- lapply(name_list_histogram,f_histogram_grid,plot_list=histograms,
legend_label=label_list_histogram, grid_labels=grid_labels_histograms)
names(grid_plots_histogram)<-name_list_histogram
## saving
mapply(f_save,grid_plots_histogram,names(grid_plots_histogram),
MoreArgs = list(output_folder=output_path,output_path="histograms",
height=height_histograms, width=width_histograms),SIMPLIFY = FALSE)
f_histogram_grid<- function(plot_list,name,legend_label,grid_labels){
string_match<-(grep(name,names(plot_list),value = FALSE))
strain_label<-grep(name,names(legend_label),value = FALSE)
print(string_match)
print(strain_label)
cowplot::plot_grid(plot_list[[string_match[1]]] +
ggtitle(legend_label[[strain_label[1]]]) +
theme(title = element_text(size=6)),
labels = grid_labels)
}
grid_plots_histogram<- lapply(name_list_histogram,f_histogram_grid,plot_list=histograms,
legend_label=label_list_histogram, grid_labels=grid_labels_histograms)
f_histogram_grid<- function(plot_list,name,legend_label,grid_labels){
print(name)
string_match<-(grep(name,names(plot_list),value = FALSE))
strain_label<-grep(name,names(legend_label),value = FALSE)
print(string_match)
print(strain_label)
cowplot::plot_grid(plot_list[[string_match[1]]] +
ggtitle(legend_label[[strain_label[1]]]) +
theme(title = element_text(size=6)),
labels = grid_labels)
}
grid_plots_histogram<- lapply(name_list_histogram,f_histogram_grid,plot_list=histograms,
legend_label=label_list_histogram, grid_labels=grid_labels_histograms)
label_list_histogram<-label_list[c(1,2,6,7)] # should contain one label per grid,
#and the order of the labels must correspond to the order in which the strains appear in name_list.
names(label_list_histogram)<-name_list_histogram
# apply the grid function to create a new list with the grids,
#and name these using the name_list so that you can later save them using the names.
grid_plots_histogram<- lapply(name_list_histogram,f_histogram_grid,plot_list=histograms,
legend_label=label_list_histogram, grid_labels=grid_labels_histograms)
names(grid_plots_histogram)<-name_list_histogram
name_list_histogram<-strain_names[c(1,2,6,7)] # should contain one name per strain that you want
#to create a grid for.
label_list_histogram<-label_list[c(1,2,6,7)] # should contain one label per grid,
#and the order of the labels must correspond to the order in which the strains appear in name_list.
names(label_list_histogram)<-name_list_histogram
# apply the grid function to create a new list with the grids,
#and name these using the name_list so that you can later save them using the names.
grid_plots_histogram<- lapply(name_list_histogram,f_histogram_grid,plot_list=histograms,
legend_label=label_list_histogram, grid_labels=grid_labels_histograms)
names(grid_plots_histogram)<-name_list_histogram
mapply(f_save,grid_plots_histogram,names(grid_plots_histogram),
MoreArgs = list(output_folder=output_path,output_path="histograms",
height=height_histograms, width=width_histograms),SIMPLIFY = FALSE)
ggplot() +
geom_density(aes(x=df_list[[8]][which(df_list[[8]][,4]=="0")],colour="fry70_uninduced")) +
geom_density(aes(x=df_list[[8]][which(df_list[[8]][,4]=="200")],colour="fry70_induced")) +
ggplot() +
geom_density(aes(x=df_list[[8]][which(df_list[[8]][,4]=="0")],colour="fry70_uninduced")) +
geom_density(aes(x=df_list[[8]][which(df_list[[8]][,4]=="200")],colour="fry70_induced"))
ggplot() +
geom_density(aes(x=df_list[[8]][which(df_list[[8]][,4]=="0"),3],colour="fry70_uninduced")) +
geom_density(aes(x=df_list[[8]][which(df_list[[8]][,4]=="200"),3],colour="fry70_induced"))
ggplot() +
geom_density(aes(x=df_list[[8]][which(df_list[[8]][,4]=="0"),3],colour="fry70_uninduced")) +
geom_density(aes(x=df_list[[8]][which(df_list[[8]][,4]=="200"),3],colour="fry70_induced")) +
geom_density(aes(x=df_list[[9]][which(df_list[[9]][,4]=="0"),3],colour="fry70_uninduced")) +
geom_density(aes(x=df_list[[9]][which(df_list[[9]][,4]=="200"),3],colour="fry70_induced")) +
geom_density(aes(x=df_list[[10]][which(df_list[[10]][,4]=="0"),3],colour="fry70_uninduced")) +
geom_density(aes(x=df_list[[10]][which(df_list[[10]][,4]=="200"),3],colour="fry70_induced"))+
theme_bw()
ggplot() +
geom_density(aes(x=df_list[[8]][which(df_list[[8]][,4]=="0"),3],colour="fry70_uninduced")) +
geom_density(aes(x=df_list[[8]][which(df_list[[8]][,4]=="200"),3],colour="fry70_induced")) +
geom_density(aes(x=df_list[[9]][which(df_list[[9]][,4]=="0"),3],colour="fry2551_uninduced")) +
geom_density(aes(x=df_list[[9]][which(df_list[[9]][,4]=="200"),3],colour="fry2551_induced")) +
geom_density(aes(x=df_list[[10]][which(df_list[[10]][,4]=="0"),3],colour="fry2683_uninduced")) +
geom_density(aes(x=df_list[[10]][which(df_list[[10]][,4]=="200"),3],colour="fry2683_induced"))+
theme_bw()
ggplot() +
geom_density(aes(x=df_list[[8]][which(df_list[[8]][,4]=="0"),3],colour="fry70_uninduced")) +
geom_density(aes(x=df_list[[8]][which(df_list[[8]][,4]=="200"),3],colour="fry70_induced")) +
geom_density(aes(x=df_list[[9]][which(df_list[[9]][,4]=="0"),3],colour="fry2551_uninduced")) +
geom_density(aes(x=df_list[[9]][which(df_list[[9]][,4]=="200"),3],colour="fry2551_induced")) +
geom_density(aes(x=df_list[[10]][which(df_list[[10]][,4]=="0"),3],colour="fry2683_uninduced")) +
geom_density(aes(x=df_list[[10]][which(df_list[[10]][,4]=="200"),3],colour="fry2683_induced"))+
theme_bw() +
xlimit(0,70000)
ggplot() +
geom_density(aes(x=df_list[[8]][which(df_list[[8]][,4]=="0"),3],colour="fry70_uninduced")) +
geom_density(aes(x=df_list[[8]][which(df_list[[8]][,4]=="200"),3],colour="fry70_induced")) +
geom_density(aes(x=df_list[[9]][which(df_list[[9]][,4]=="0"),3],colour="fry2551_uninduced")) +
geom_density(aes(x=df_list[[9]][which(df_list[[9]][,4]=="200"),3],colour="fry2551_induced")) +
geom_density(aes(x=df_list[[10]][which(df_list[[10]][,4]=="0"),3],colour="fry2683_uninduced")) +
geom_density(aes(x=df_list[[10]][which(df_list[[10]][,4]=="200"),3],colour="fry2683_induced"))+
theme_bw() +
xlim(0,70000)
ggplot() +
geom_density(aes(x=df_list[[8]][which(df_list[[8]][,4]=="0"),3],colour="fry70_uninduced")) +
geom_density(aes(x=df_list[[8]][which(df_list[[8]][,4]=="200"),3],colour="fry70_induced")) +
geom_density(aes(x=df_list[[9]][which(df_list[[9]][,4]=="0"),3],colour="fry2551_uninduced")) +
geom_density(aes(x=df_list[[9]][which(df_list[[9]][,4]=="200"),3],colour="fry2551_induced")) +
geom_density(aes(x=df_list[[10]][which(df_list[[10]][,4]=="0"),3],colour="fry2683_uninduced")) +
geom_density(aes(x=df_list[[10]][which(df_list[[10]][,4]=="200"),3],colour="fry2683_induced"))+
theme_bw() +
xlim(0,70000) +
ylim(0,0.001)
s_value<-1.5
ggplot() +
geom_density(aes(x=df_list[[8]][which(df_list[[8]][,4]=="0"),3],colour="fry70_uninduced"),
size=s_value) +
geom_density(aes(x=df_list[[8]][which(df_list[[8]][,4]=="200"),3],colour="fry70_induced"),
size=s_value) +
geom_density(aes(x=df_list[[9]][which(df_list[[9]][,4]=="0"),3],colour="fry2551_uninduced"),
size=s_value) +
geom_density(aes(x=df_list[[9]][which(df_list[[9]][,4]=="200"),3],colour="fry2551_induced"),
size=s_value) +
geom_density(aes(x=df_list[[10]][which(df_list[[10]][,4]=="0"),3],colour="fry2683_uninduced"),
size=s_value) +
geom_density(aes(x=df_list[[10]][which(df_list[[10]][,4]=="200"),3],colour="fry2683_induced"),
size=s_value)+
theme_bw() +
xlim(0,70000) +
ylim(0,0.001)
s_value<-1
ggplot() +
geom_density(aes(x=df_list[[8]][which(df_list[[8]][,4]=="0"),3],colour="fry70_uninduced"),
size=s_value) +
geom_density(aes(x=df_list[[8]][which(df_list[[8]][,4]=="200"),3],colour="fry70_induced"),
size=s_value) +
geom_density(aes(x=df_list[[9]][which(df_list[[9]][,4]=="0"),3],colour="fry2551_uninduced"),
size=s_value) +
geom_density(aes(x=df_list[[9]][which(df_list[[9]][,4]=="200"),3],colour="fry2551_induced"),
size=s_value) +
geom_density(aes(x=df_list[[10]][which(df_list[[10]][,4]=="0"),3],colour="fry2683_uninduced"),
size=s_value) +
geom_density(aes(x=df_list[[10]][which(df_list[[10]][,4]=="200"),3],colour="fry2683_induced"),
size=s_value)+
theme_bw() +
xlim(0,70000) +
ylim(0,0.001)
ggplot() +
# geom_density(aes(x=df_list[[8]][which(df_list[[8]][,4]=="0"),3],colour="fry70_uninduced"),
#              size=s_value) +
# geom_density(aes(x=df_list[[8]][which(df_list[[8]][,4]=="200"),3],colour="fry70_induced"),
#              size=s_value) +
geom_density(aes(x=df_list[[9]][which(df_list[[9]][,4]=="0"),3],colour="fry2551_uninduced"),
size=s_value) +
geom_density(aes(x=df_list[[9]][which(df_list[[9]][,4]=="200"),3],colour="fry2551_induced"),
size=s_value) +
geom_density(aes(x=df_list[[10]][which(df_list[[10]][,4]=="0"),3],colour="fry2683_uninduced"),
size=s_value) +
geom_density(aes(x=df_list[[10]][which(df_list[[10]][,4]=="200"),3],colour="fry2683_induced"),
size=s_value)+
theme_bw() +
xlim(0,70000)
ggplot() +
# geom_density(aes(x=df_list[[8]][which(df_list[[8]][,4]=="0"),3],colour="fry70_uninduced"),
#              size=s_value) +
# geom_density(aes(x=df_list[[8]][which(df_list[[8]][,4]=="200"),3],colour="fry70_induced"),
#              size=s_value) +
geom_density(aes(x=df_list[[9]][which(df_list[[9]][,4]=="0"),3],colour="fry2551_uninduced"),
size=s_value) +
geom_density(aes(x=df_list[[9]][which(df_list[[9]][,4]=="200"),3],colour="fry2551_induced"),
size=s_value) +
geom_density(aes(x=df_list[[10]][which(df_list[[10]][,4]=="0"),3],colour="fry2683_uninduced"),
size=s_value) +
geom_density(aes(x=df_list[[10]][which(df_list[[10]][,4]=="200"),3],colour="fry2683_induced"),
size=s_value)+
theme_bw()
ggplot() +
# geom_density(aes(x=df_list[[8]][which(df_list[[8]][,4]=="0"),3],colour="fry70_uninduced"),
#              size=s_value) +
# geom_density(aes(x=df_list[[8]][which(df_list[[8]][,4]=="200"),3],colour="fry70_induced"),
#              size=s_value) +
geom_density(aes(x=df_list[[4]][which(df_list[[4]][,4]=="0"),3],colour="fry2551_uninduced"),
size=s_value) +
geom_density(aes(x=df_list[[4]][which(df_list[[4]][,4]=="200"),3],colour="fry2551_induced"),
size=s_value) +
geom_density(aes(x=df_list[[5]][which(df_list[[5]][,4]=="0"),3],colour="fry2683_uninduced"),
size=s_value) +
geom_density(aes(x=df_list[[5]][which(df_list[[5]][,4]=="200"),3],colour="fry2683_induced"),
size=s_value)+
theme_bw()
ggplot() +
# geom_density(aes(x=df_list[[8]][which(df_list[[8]][,4]=="0"),3],colour="fry70_uninduced"),
#              size=s_value) +
# geom_density(aes(x=df_list[[8]][which(df_list[[8]][,4]=="200"),3],colour="fry70_induced"),
#              size=s_value) +
geom_density(aes(x=df_list[[9]][which(df_list[[9]][,4]=="0"),3],colour="fry2551_uninduced"),
size=s_value) +
geom_density(aes(x=df_list[[9]][which(df_list[[9]][,4]=="200"),3],colour="fry2551_induced"),
size=s_value) +
geom_density(aes(x=df_list[[10]][which(df_list[[10]][,4]=="0"),3],colour="fry2683_uninduced"),
size=s_value) +
geom_density(aes(x=df_list[[10]][which(df_list[[10]][,4]=="200"),3],colour="fry2683_induced"),
size=s_value)+
theme_bw()
xlim(0,150000)
ggplot() +
# geom_density(aes(x=df_list[[8]][which(df_list[[8]][,4]=="0"),3],colour="fry70_uninduced"),
#              size=s_value) +
# geom_density(aes(x=df_list[[8]][which(df_list[[8]][,4]=="200"),3],colour="fry70_induced"),
#              size=s_value) +
geom_density(aes(x=df_list[[9]][which(df_list[[9]][,4]=="0"),3],colour="fry2551_uninduced"),
size=s_value) +
geom_density(aes(x=df_list[[9]][which(df_list[[9]][,4]=="200"),3],colour="fry2551_induced"),
size=s_value) +
geom_density(aes(x=df_list[[10]][which(df_list[[10]][,4]=="0"),3],colour="fry2683_uninduced"),
size=s_value) +
geom_density(aes(x=df_list[[10]][which(df_list[[10]][,4]=="200"),3],colour="fry2683_induced"),
size=s_value)+
theme_bw() +
xlim(0,150000)
ggsave(filename = "controls.jpeg",path = output_path)
palette<-c("24h"="purple")
colour_labels<-time_points
scale_x_breaks<-experiment_doses
ylab_title<-"Fluorescence (a.u.)"
xlab_title<-xlabel
legend_title<-"Time Point"
stat_columns_1<-c(1,6)
stat_columns_2<-c(2,7)
size_value_descriptives<-4
height_descriptives<-10
width_descriptives<-15
library("minpack.lm")
#define x axis doses and the labels for plotting
doses_experiment<-frame_list[[1]][,8]
labels_x_axis<-c(0,frame_list[[1]][c(2:nrow(frame_list[[i]])),8])
# pick which strains/time_points you want to plot, and their labels
frame_list<-descriptives[descriptives_to_use]
label_list_sigmoid<-label_list[labels_to_use]
# replace 0 values in the doses with 0.1
for(i in c(1:length(frame_list))){
frame_list[[i]][1,8]<-0.3
}
# generate log distributed x values for smoother line fitting.
library(emdbook)
x_values<-lseq(min(frame_list[[1]][,8]),
max(frame_list[[1]][,8]),1000)
# apply the fitting to each frame with its own individual starting points.
sigmoid_fit_descriptives<-mapply(function_curve_fitting,frame_list,list_of_starting_points,
SIMPLIFY = FALSE)
# plot the fitted lines and the individual data points
sigmoid_plot<-f_plot_sigmoid_curves(sigmoid_fit_descriptives,frame_list)
f_save(sigmoid_plot,paste("sigmoid_fit_weighted.jpeg",time_point_sigmoid,sep = "_"),
output_folder=output_path,output_path="",
height=height_sigmoid, width=width_sigmoid)
frame_list<-descriptives[descriptives_to_use]
label_list_sigmoid<-label_list[labels_to_use]
#define x axis doses and the labels for plotting
doses_experiment<-frame_list[[1]][,8]
labels_x_axis<-c(0,frame_list[[1]][c(2:nrow(frame_list[[i]])),8])
frame_list<-descriptives[descriptives_to_use]
descriptives_to_use<-c(1,2)
labels_to_use<-c(1,2)
colour_palette<-c("red","blue") # define the colour palette for plotting
# define the plot title, xlabel
plot_title<-"Dose Response Curves, 24h"
xlabel<-expression(paste("aTc[ng/mL]"))
# define starting points for the fitting for each curve: c(a,b,c,d)
# a is the upper asymptote, b is the steepest slope, c is the x axis value at b, d is the lower
# asymptote. you can define these individually for every curve.
# a negative b gives you an inverse sigmoid, a positive one gives you a sigmoid.
list_of_starting_points<-list(
c(30000,0.01,7,10000),
c(20000,0.01,27,5000)
)
time_point_sigmoid<-"24h"
height_sigmoid<-10
width_sigmoid<-15
colour_palette<-c("red","pink","blue","lightblue") # define the colour palette for plotting
frame_list<-descriptives[descriptives_to_use]
label_list_sigmoid<-label_list[labels_to_use]
#define x axis doses and the labels for plotting
doses_experiment<-frame_list[[1]][,8]
labels_x_axis<-c(0,frame_list[[1]][c(2:nrow(frame_list[[i]])),8])
labels_x_axis<-c(0,frame_list[[1]][c(2:nrow(frame_list[[1]])),8])
# replace 0 values in the doses with 0.1
for(i in c(1:length(frame_list))){
frame_list[[i]][1,8]<-0.3
}
library(emdbook)
x_values<-lseq(min(frame_list[[1]][,8]),
max(frame_list[[1]][,8]),1000)
# apply the fitting to each frame with its own individual starting points.
sigmoid_fit_descriptives<-mapply(function_curve_fitting,frame_list,list_of_starting_points,
SIMPLIFY = FALSE)
# plot the fitted lines and the individual data points
sigmoid_plot<-f_plot_sigmoid_curves(sigmoid_fit_descriptives,frame_list)
f_save(sigmoid_plot,paste("sigmoid_fit_weighted.jpeg",time_point_sigmoid,sep = "_"),
output_folder=output_path,output_path="",
height=height_sigmoid, width=width_sigmoid)
list_of_starting_points<-list(
c(3000,0.01,3,7000),
c(2000,0.01,3,7000)
c(3000,0.1,7,10000),
library(emdbook)
x_values<-lseq(min(frame_list[[1]][,8]),
max(frame_list[[1]][,8]),1000)
# apply the fitting to each frame with its own individual starting points.
sigmoid_fit_descriptives<-mapply(function_curve_fitting,frame_list,list_of_starting_points,
SIMPLIFY = FALSE)
# plot the fitted lines and the individual data points
sigmoid_plot<-f_plot_sigmoid_curves(sigmoid_fit_descriptives,frame_list)
f_save(sigmoid_plot,paste("sigmoid_fit_weighted.jpeg",time_point_sigmoid,sep = "_"),
output_folder=output_path,output_path="",
height=height_sigmoid, width=width_sigmoid)
descriptives_to_use<-c(1,2,6,7)
labels_to_use<-c(1,2,6,7)
colour_palette<-c("red","pink","blue","lightblue") # define the colour palette for plotting
# define the plot title, xlabel
plot_title<-"Dose Response Curves, 24h"
xlabel<-expression(paste("aTc[ng/mL]"))
list_of_starting_points<-list(
c(3000,0.01,3,7000),
c(2000,0.01,3,7000)
c(3000,0.1,7,10000),
list_of_starting_points<-list(
c(3000,0.01,3,7000),
c(2000,0.01,3,7000),
c(3000,0.1,7,10000),
c(2000,0.1,7,10000)
)
frame_list<-descriptives[descriptives_to_use]
label_list_sigmoid<-label_list[labels_to_use]
#define x axis doses and the labels for plotting
doses_experiment<-frame_list[[1]][,8]
labels_x_axis<-c(0,frame_list[[1]][c(2:nrow(frame_list[[1]])),8])
# replace 0 values in the doses with 0.1
for(i in c(1:length(frame_list))){
frame_list[[i]][1,8]<-0.3
}
# generate log distributed x values for smoother line fitting.
library(emdbook)
x_values<-lseq(min(frame_list[[1]][,8]),
max(frame_list[[1]][,8]),1000)
# apply the fitting to each frame with its own individual starting points.
sigmoid_fit_descriptives<-mapply(function_curve_fitting,frame_list,list_of_starting_points,
SIMPLIFY = FALSE)
# plot the fitted lines and the individual data points
sigmoid_plot<-f_plot_sigmoid_curves(sigmoid_fit_descriptives,frame_list)
f_save(sigmoid_plot,paste("sigmoid_fit_weighted.jpeg",time_point_sigmoid,sep = "_"),
output_folder=output_path,output_path="",
height=height_sigmoid, width=width_sigmoid)
list_of_starting_points<-list(
c(3000,0.01,3,7000),
c(2000,0.01,3,7000),
c(3000,0.01,7,10000),
c(2000,0.01,7,10000)
)
x_values<-lseq(min(frame_list[[1]][,8]),
max(frame_list[[1]][,8]),1000)
# apply the fitting to each frame with its own individual starting points.
sigmoid_fit_descriptives<-mapply(function_curve_fitting,frame_list,list_of_starting_points,
SIMPLIFY = FALSE)
# plot the fitted lines and the individual data points
sigmoid_plot<-f_plot_sigmoid_curves(sigmoid_fit_descriptives,frame_list)
f_save(sigmoid_plot,paste("sigmoid_fit_weighted.jpeg",time_point_sigmoid,sep = "_"),
output_folder=output_path,output_path="",
height=height_sigmoid, width=width_sigmoid)
list_of_starting_points<-list(
c(3000,0.1,3,7000),
c(2000,0.1,3,7000),
c(3000,0.1,7,10000),
c(2000,0.1,7,10000)
)
x_values<-lseq(min(frame_list[[1]][,8]),
max(frame_list[[1]][,8]),1000)
# apply the fitting to each frame with its own individual starting points.
sigmoid_fit_descriptives<-mapply(function_curve_fitting,frame_list,list_of_starting_points,
SIMPLIFY = FALSE)
# plot the fitted lines and the individual data points
sigmoid_plot<-f_plot_sigmoid_curves(sigmoid_fit_descriptives,frame_list)
f_save(sigmoid_plot,paste("sigmoid_fit_weighted.jpeg",time_point_sigmoid,sep = "_"),
output_folder=output_path,output_path="",
height=height_sigmoid, width=width_sigmoid)
ggplot() +
geom_density(aes(x=df_list[[8]][which(df_list[[8]][,4]=="0"),3],colour="fry70_uninduced"),
size=s_value) +
geom_density(aes(x=df_list[[8]][which(df_list[[8]][,4]=="200"),3],colour="fry70_induced"),
size=s_value) +
# geom_density(aes(x=df_list[[9]][which(df_list[[9]][,4]=="0"),3],colour="fry2551_uninduced"),
#              size=s_value) +
# geom_density(aes(x=df_list[[9]][which(df_list[[9]][,4]=="200"),3],colour="fry2551_induced"),
#              size=s_value) +
#
# geom_density(aes(x=df_list[[10]][which(df_list[[10]][,4]=="0"),3],colour="fry2683_uninduced"),
#              size=s_value) +
# geom_density(aes(x=df_list[[10]][which(df_list[[10]][,4]=="200"),3],colour="fry2683_induced"),
#              size=s_value)+
theme_bw() +
xlim(0,1500)
colnames(t0p1)
columns_to_include<-c(3,6,7,17) #1=FSC-A, #2=FSC-H, #3=FSC-W, #4=SSC-A, #5=SSC-H, #6=SSC-W, #7= 488 [C]-H
f_df_list<-function(flowset,starting_well,wells_per_sample,doses,columns,length_samples){
df_list<-list()
for(i in seq(starting_well,length(flowset),wells_per_sample)){
strain<-data.frame()
for(k in c(i:(i+wells_per_sample-1))){
sample<-as.data.frame(flowset[[k]]@exprs[,columns])
dose<-doses[[which(k==c(i:(i+wells_per_sample-1)))]]
dose_column<-as.data.frame(rep(dose,nrow(sample)))
sample<-cbind(sample,dose_column)
colnames(sample)[5]<-"Dose"
strain<-rbind(strain,sample)
}
index<-which(i==seq(starting_well,length(flowset),wells_per_sample))
df_list[[index]]<-strain
}
# for(m in c(85:90)){
#
#   if((m %% 2) == 0) {
#     dose<-0
#   } else {
#     dose<-400
#   }
#   print(m)
#
#   sample<-as.data.frame(flowset[[m]]@exprs[,columns])
#   dose_column<-as.data.frame(rep(dose,nrow(sample)))
#   sample<-cbind(sample,dose_column)
#   colnames(sample)[4]<-"Dose"
#
#   df_list[[m]]<-sample
# }
#
return(df_list)
}
df_list<-c(f_df_list(t0p1,starting_well,wells_per_sample,experiment_doses,columns_to_include),
f_df_list(t1p1,starting_well,2,c(0,200),columns_to_include),
f_df_list(t2p1,starting_well,wells_per_sample,experiment_doses,columns_to_include),
f_df_list(t3p1,starting_well,2,c(0,200),columns_to_include))
#----------------------------------------------------------------------------------
##create names for the dataframe list
df_list_names<-vector()
for (i in time_points){
name<-lapply(strain_names,f_names_df_list,i)
df_list_names<-c(df_list_names, name)
}
names(df_list)<-df_list_names
ggplot() +
# geom_density(aes(x=df_list[[8]][which(df_list[[8]][,4]=="0"),3],colour="fry70_uninduced"),
#              size=s_value) +
# geom_density(aes(x=df_list[[8]][which(df_list[[8]][,4]=="200"),3],colour="fry70_induced"),
#              size=s_value) +
geom_density(aes(x=df_list[[9]][which(df_list[[9]][,4]=="0"),4],colour="fry2551_uninduced"),
size=s_value) +
geom_density(aes(x=df_list[[9]][which(df_list[[9]][,4]=="200"),4],colour="fry2551_induced"),
size=s_value) +
geom_density(aes(x=df_list[[10]][which(df_list[[10]][,4]=="0"),4],colour="fry2683_uninduced"),
size=s_value) +
geom_density(aes(x=df_list[[10]][which(df_list[[10]][,4]=="200"),4],colour="fry2683_induced"),
size=s_value)+
theme_bw() +
xlim(0,NA)
ggplot() +
# geom_density(aes(x=df_list[[8]][which(df_list[[8]][,4]=="0"),3],colour="fry70_uninduced"),
#              size=s_value) +
# geom_density(aes(x=df_list[[8]][which(df_list[[8]][,4]=="200"),3],colour="fry70_induced"),
#              size=s_value) +
geom_density(aes(x=df_list[[9]][which(df_list[[9]][,5]=="0"),4],colour="fry2551_uninduced"),
size=s_value) +
geom_density(aes(x=df_list[[9]][which(df_list[[9]][,5]=="200"),4],colour="fry2551_induced"),
size=s_value) +
geom_density(aes(x=df_list[[10]][which(df_list[[10]][,5]=="0"),4],colour="fry2683_uninduced"),
size=s_value) +
geom_density(aes(x=df_list[[10]][which(df_list[[10]][,5]=="200"),4],colour="fry2683_induced"),
size=s_value)+
theme_bw() +
xlim(0,NA)
ggplot() +
# geom_density(aes(x=df_list[[8]][which(df_list[[8]][,4]=="0"),3],colour="fry70_uninduced"),
#              size=s_value) +
# geom_density(aes(x=df_list[[8]][which(df_list[[8]][,4]=="200"),3],colour="fry70_induced"),
#              size=s_value) +
geom_density(aes(x=df_list[[9]][which(df_list[[9]][,5]=="0"),4],colour="fry2551_uninduced"),
size=s_value) +
geom_density(aes(x=df_list[[9]][which(df_list[[9]][,5]=="200"),4],colour="fry2551_induced"),
size=s_value) +
geom_density(aes(x=df_list[[10]][which(df_list[[10]][,5]=="0"),4],colour="fry2683_uninduced"),
size=s_value) +
geom_density(aes(x=df_list[[10]][which(df_list[[10]][,5]=="200"),4],colour="fry2683_induced"),
size=s_value)+
theme_bw() +
xlim(0,300)
ggplot() +
# geom_density(aes(x=df_list[[8]][which(df_list[[8]][,4]=="0"),3],colour="fry70_uninduced"),
#              size=s_value) +
# geom_density(aes(x=df_list[[8]][which(df_list[[8]][,4]=="200"),3],colour="fry70_induced"),
#              size=s_value) +
geom_density(aes(x=df_list[[4]][which(df_list[[4]][,5]=="0"),3],colour="fry2551_uninduced"),
size=s_value) +
geom_density(aes(x=df_list[[4]][which(df_list[[4]][,5]=="200"),3],colour="fry2551_induced"),
size=s_value) +
geom_density(aes(x=df_list[[5]][which(df_list[[5]][,5]=="0"),3],colour="fry2683_uninduced"),
size=s_value) +
geom_density(aes(x=df_list[[5]][which(df_list[[5]][,5]=="200"),3],colour="fry2683_induced"),
size=s_value)+
theme_bw()
