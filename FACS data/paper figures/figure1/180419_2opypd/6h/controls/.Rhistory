#                     y=seq(0,50,length.out=length(c(min(x_values):max(x_values))))),sides = "lb")
return(pretty_plot)
}
sigmoid_plot<-f_plot_sigmoid_curves_single(fit,frame_list, control_frame_list,
dose_control, label_list_control, xlim, ylim,ec_list,strain_list)
ggsave(sigmoid_plot,filename =  "ypd.jpeg", path=output_path, height=6, width=9.04, units = "cm")
f_plot_sigmoid_curves_single<-
# plot the fitted line and the individual data points.
function(fit_list,frame_list, control_frame_list,dose_control,label_list_control, xlim, ylim,
ec_list,strain_list,doses){
formatter<-function(x){x/1000}
final_plot<-ggplot()
# plot the lines
for (i in c(1:length(fit_list))){
print(i)
single_layer_line<- geom_line(aes_(x=x_values, y=fit_list[[i]],
colour=label_list_sigmoid[[i]]), size=1)
final_plot<-final_plot+single_layer_line
}
# plot the individual data points
for (j in c(1:length(frame_list))){
single_layer_point<- geom_point(aes_(x=frame_list[[j]][,8],y=frame_list[[j]][,1],
colour=label_list_sigmoid[[j]]))
final_plot<-final_plot+single_layer_point
}
# plot the controls
for(k in c(1:length(control_frame_list))){
frame<-control_frame_list[[k]][which(control_frame_list[[k]][,8]==dose_control),]
single_layer_control<- geom_hline(aes_(yintercept=frame[,1],
linetype=label_list_control[[k]]), colour="black",
show.legend = FALSE)
ribbon_layer_control<- geom_ribbon(aes_(ymin=frame[,1]-(frame[,6]*frame[,1]),
ymax=frame[,1]-(frame[,6]*frame[,1]),
x=x_values))
final_plot<-final_plot+single_layer_control
}
## find the ECs
for(l in c(1:length(ec_list))){
ec10<-round(ec_list[[l]][1],1)
ec10_xvalue<-median(which(round(x_values,1)==ec10))
ec10_yvalue<-fit_list[[l]][as.integer(ec10_xvalue)]
ec50<-round(ec_list[[l]][2],0)
ec50_xvalue<-median(which(round(x_values,0)==ec50))
ec50_yvalue<-fit_list[[l]][as.integer(ec50_xvalue)]
ec90<-round(ec_list[[l]][3],0)
ec90_xvalue<-median(which(round(x_values,0)==ec90))
ec90_yvalue<-fit_list[[l]][as.integer(ec90_xvalue)]
print(which(round(x_values,0)==ec90))
print(ec90_xvalue)
print(ec90_yvalue)
strain<-strain_list[[l]]
ec_size<-1.5
ec10_layer<-geom_point(aes_(x=ec10,
y=ec10_yvalue,
shape=paste("EC10",strain)),size=ec_size)
ec50_layer<-geom_point(aes_(x=ec50,
y=ec50_yvalue,
shape=paste("EC50",strain)),size=ec_size)
ec90_layer<-geom_point(aes_(x=ec90,
y=ec90_yvalue,
shape=paste("EC90",strain)),size=ec_size)
#final_plot<-final_plot + ec10_layer + ec50_layer + ec90_layer
}
pretty_plot<-final_plot +
scale_linetype_manual(values=c("longdash","dotted", "dotdash")) +
scale_shape_manual(values = c("EC10 NF"=0,
"EC50 NF"=1,
"EC90 NF"=2,
"EC10 pAct1"=17,
"EC50 pAct1"=16,
"EC90 pAct1"=15)) +
scale_colour_manual(values = colour_palette) +
scale_x_continuous(breaks = doses_experiment,
labels = labels_x_axis,
limits = xlim,
trans = "log10") +
scale_y_continuous(limits = ylim, labels=formatter) +
guides(colour=guide_legend(nrow=2)) +
# ggtitle(plot_title) +
xlab(xlabel) +
ylab(expression(paste("Fluorescence x","10"^"3","(a.u.)",sep=""))) +
theme(panel.grid.minor = element_blank(),
#legend.direction = "horizontal",
legend.position = c(0.2,0.6),
legend.title = element_blank(),
legend.key.height = unit(0.35,"cm"),
legend.key = element_blank(),
legend.box.background = element_rect(linetype = "solid", colour="black"),
legend.margin = margin(t=0.04,r=0.1,b=0.1,l=0.1,unit="cm"),
panel.border = element_blank(),
axis.line = element_line(),
# axis.text = element_text(size=24),
# axis.title = element_text(size=24),
axis.title = element_text(hjust = 1),
panel.background = element_blank()
)
# geom_rangeframe(aes(x=c(min(x_values):max(x_values)),
#                     y=seq(0,50,length.out=length(c(min(x_values):max(x_values))))),sides = "lb")
return(pretty_plot)
}
sigmoid_plot<-f_plot_sigmoid_curves_single(fit,frame_list, control_frame_list,
dose_control, label_list_control, xlim, ylim,ec_list,strain_list)
ggsave(sigmoid_plot,filename =  "ypd.jpeg", path=output_path, height=6, width=9.04, units = "cm")
# creating the individual plots
library("minpack.lm")
library("ggthemes")
library("ggplot2")
## plotting the sigmoid curves.
xlabel<-expression(paste("aTc [ng/mL]"))
f_plot_sigmoid_curves_overlaid<-
# plot the fitted line and the individual data points.
function(fit_list,frame_list, control_frame_list,label_list_control, xlim, ylim,control_doses){
formatter<-function(x){x/1000}
final_plot<-ggplot()
# plot the lines
for (i in c(1:length(fit_list))){
single_layer_line<- geom_line(aes_(x=x_values, y=fit_list[[i]],
colour=label_list_sigmoid[[i]]), size=1)
final_plot<-final_plot+single_layer_line
}
# plot the individual data points
for (j in c(1:length(frame_list))){
single_layer_point<- geom_point(aes_(x=frame_list[[j]][,8],y=frame_list[[j]][,1],
colour=label_list_sigmoid[[j]]))
final_plot<-final_plot+single_layer_point
}
## find the ECs
for(l in c(1:length(ec_list))){
ec10<-round(ec_list[[l]][1],1)
ec10_xvalue<-mean(which(round(x_values,1)==ec10))
ec10_yvalue<-fit_list[[l]][as.integer(ec10_xvalue)]
ec50<-round(ec_list[[l]][2],1)
ec50_xvalue<-mean(which(round(x_values,1)==ec50))
ec50_yvalue<-fit_list[[l]][as.integer(ec50_xvalue)]
ec90<-round(ec_list[[l]][3],0)
ec90_xvalue<-mean(which(round(x_values,0)==ec90))
ec90_yvalue<-fit_list[[l]][as.integer(ec90_xvalue)]
ec_size<-1.5
ec10_layer<-geom_point(aes_(x=ec10,
y=ec10_yvalue,
shape=paste("EC10"),
colour=label_list_sigmoid[[l]]),size=ec_size)
ec50_layer<-geom_point(aes_(x=ec50,
y=ec50_yvalue,
shape=paste("EC50"),
colour=label_list_sigmoid[[l]]),size=ec_size)
ec90_layer<-geom_point(aes_(x=ec90,
y=ec90_yvalue,
shape=paste("EC90"),
colour=label_list_sigmoid[[l]]),size=ec_size)
#final_plot<-final_plot + ec10_layer + ec50_layer + ec90_layer
}
# plot the controls
for(k in c(1:length(control_frame_list))){
dose_control<-control_doses[[k]]
frame<-control_frame_list[[k]][which(control_frame_list[[k]][,8]==dose_control),]
single_layer_control<- geom_hline(aes_(yintercept=frame[,1],
linetype=label_list_control[[k]],colour=
label_list_sigmoid[[ceiling(k/2)]]))
ribbon_layer_control<- geom_ribbon(aes_(ymin=frame[,1]-(frame[,6]*frame[,1]),
ymax=frame[,1]-(frame[,6]*frame[,1]),
x=x_values))
#final_plot<-final_plot+single_layer_control
}
pretty_plot<-final_plot +
scale_shape_manual(values = c("EC10"=0,
"EC50"=1,
"EC90"=2)) +
scale_linetype_manual(values=c("longdash","dotdash",
"longdash","dotdash",
"longdash","dotdash",
"longdash","dotdash")) +
scale_colour_manual(values = colour_palette) +
scale_x_continuous(breaks = doses_experiment,
labels = labels_x_axis,
limits = xlim,
trans = "log10") +
scale_y_continuous(limits = ylim, labels=formatter) +
guides(colour=guide_legend(title = "Strains",nrow=2)) +
# ggtitle(plot_title) +
xlab(xlabel) +
ylab(expression(paste("Fluorescence x","10"^"3","(a.u.)",sep="")))+
theme(panel.grid.minor = element_blank(),
legend.position = c(0.2,0.6),
legend.title = element_blank(),
legend.key.height = unit(0.35,"cm"),
legend.key = element_blank(),
legend.box.background = element_rect(linetype = "solid", colour="black"),
legend.margin = margin(t=0.04,r=0.1,b=0.1,l=0.1,unit="cm"),
panel.border = element_blank(),
axis.line = element_line(),
# axis.text = element_text(size=24),
# axis.title = element_text(size=24),
axis.title = element_text(hjust = 1),
panel.background = element_blank()
)
return(pretty_plot)
}
descriptives_to_use<-c(1,6,11,16)
control_descriptives_to_use<-c(3,5,8,10,13,15,18,20)
xlim<-c(0.15,600)
ylim<-c(0,NA)
dose_control<-c("400","400","200","200","200","200","400","400")
colour_palette<-c("#7a1f1f","#cb3434","#ff3333","#ffcccc")
#c("pink","firebrick2","tomato3","darkorange1")
#c("#02085F","#3A05FA","#6E88FC","#91DEFD")
list_of_starting_points<-list(
c(30000,0.8,20,1,5000),
c(7000,0.1,2,1,5000),
c(40000,0.5,5,1,5000),
c(40000,0.5,2,1,5000)
)
# pick which strains/time_points you want to plot, and their labels
frame_list<-descriptives[descriptives_to_use]
label_list_sigmoid<-c("YPeth","SGly","SDpro","SDmin")
label_list_control<-c("ype_norepressor","ype_70",
"gly_norepressor","gly_70",
"pro_norepressor","pro_70",
"sd_norepressor","sd_70")
control_frame_error<-df_list[control_descriptives_to_use]
# pick your controls
control_frame_list<-descriptives[control_descriptives_to_use]
#define x axis doses and the labels for plotting
doses_experiment<-c(0.19,1,5,20,60,200,600)
labels_x_axis<- c("0","1","5","20","60","200","600")
# replace 0 values in the doses with 0.1
for(i in c(1:length(frame_list))){
frame_list[[i]][1,8]<-0.19
}
# generate log distributed x values for smoother line fitting.
library(emdbook)
x_values<-lseq(min(frame_list[[1]][,8]),
max(600),1000)
strain_list<-label_list_sigmoid
# apply the fitting to each frame with its own individual starting points.
sigmoid_fit_parameters<-mapply(function_curve_fitting,frame_list,list_of_starting_points,
SIMPLIFY = FALSE)
ec_list<-lapply(sigmoid_fit_parameters,f_ecs)
fit<-lapply(sigmoid_fit_parameters,f_sigmoid_fit,x_values)
sigmoid_plot<-f_plot_sigmoid_curves_overlaid(fit,frame_list, control_frame_list,
label_list_control, xlim, ylim, dose_control)
sigmoid_plot
ggsave(sigmoid_plot,filename =  "overlaid.jpeg", path=output_path, height=6, width=9.04, units = "cm")
#---------------------------------------------------------------------------------------------------
## derivative plot
x_values_d<-seq(0,
max(frame_list[[1]][,8]),length.out=10000)
sigmoid_d_fit<-lapply(sigmoid_fit_parameters,f_d_sigmoid_fit,x_values_d)
ec_y_values<-f_ec_yvalues(sigmoid_d_fit,ec_list)
ylims<-c(0,10000)
strains<-c("a","a","a","a")
colour_by_strain<-TRUE
f_derivative_plot<-f_plot_sigmoid_d(x_values_d, sigmoid_d_fit, label_list_sigmoid, ylims,ec_y_values,strains)
f_derivative_plot
ggsave(f_derivative_plot,filename =  "overlaid_derivative.jpeg", path=output_path, height=6, width=9.04
, units = "cm")
#---------------------------------------------------------------------------------------------------
## spearman plot
spearman_dfs<-descriptives_to_use
label_list_spearman<-label_list_sigmoid
spearman_list<-df_with_size[spearman_dfs]
# replace 0 values in the doses with 0.19
for(i in c(1:length(spearman_list))){
for(k in c(1:nrow(spearman_list[[i]]))){
if(spearman_list[[i]][k,4]== 0){
spearman_list[[i]][k,4]<-0.19
}
}
}
spearman_doses_list<-list(unique(frame_list[[1]][,8]),unique(frame_list[[2]][,8]),
unique(frame_list[[3]][,8]),unique(frame_list[[4]][,8]))
variances<-vector("list",length(spearman_list))
for(k in c(1:length(spearman_list))){
variance<-vector()
spearman_doses<-spearman_doses_list[[k]]
for(i in spearman_doses){
dataframe<-spearman_list[[k]][which(spearman_list[[k]][,4]==i),]
var<-cor(dataframe[,3],dataframe[,5], method = "spearman")
variance<-c(variance,var)
}
variances[[k]]<-variance
}
spearman<-f_spearman_plot(variances,0,label_list_spearman,0, spearman_doses, 0.35)
spearman
spearman<-f_spearman_plot(variances,0,label_list_spearman,"a", spearman_doses, 0.35)
spearman
ggsave(spearman,filename =  "overlaid_spearman.jpeg", path=output_path,height=6, width=9.04, units = "cm")
f_plot_sigmoid_curves_overlaid<-
# plot the fitted line and the individual data points.
function(fit_list,frame_list, control_frame_list,label_list_control, xlim, ylim,control_doses){
formatter<-function(x){x/1000}
final_plot<-ggplot()
# plot the lines
for (i in c(1:length(fit_list))){
single_layer_line<- geom_line(aes_(x=x_values, y=fit_list[[i]],
colour=label_list_sigmoid[[i]]), size=1)
final_plot<-final_plot+single_layer_line
}
# plot the individual data points
for (j in c(1:length(frame_list))){
single_layer_point<- geom_point(aes_(x=frame_list[[j]][,8],y=frame_list[[j]][,1],
colour=label_list_sigmoid[[j]]))
final_plot<-final_plot+single_layer_point
}
## find the ECs
for(l in c(1:length(ec_list))){
ec10<-round(ec_list[[l]][1],1)
ec10_xvalue<-mean(which(round(x_values,1)==ec10))
ec10_yvalue<-fit_list[[l]][as.integer(ec10_xvalue)]
ec50<-round(ec_list[[l]][2],1)
ec50_xvalue<-mean(which(round(x_values,1)==ec50))
ec50_yvalue<-fit_list[[l]][as.integer(ec50_xvalue)]
ec90<-round(ec_list[[l]][3],0)
ec90_xvalue<-mean(which(round(x_values,0)==ec90))
ec90_yvalue<-fit_list[[l]][as.integer(ec90_xvalue)]
ec_size<-1.5
ec10_layer<-geom_point(aes_(x=ec10,
y=ec10_yvalue,
shape=paste("EC10"),
colour=label_list_sigmoid[[l]]),size=ec_size)
ec50_layer<-geom_point(aes_(x=ec50,
y=ec50_yvalue,
shape=paste("EC50"),
colour=label_list_sigmoid[[l]]),size=ec_size)
ec90_layer<-geom_point(aes_(x=ec90,
y=ec90_yvalue,
shape=paste("EC90"),
colour=label_list_sigmoid[[l]]),size=ec_size)
#final_plot<-final_plot + ec10_layer + ec50_layer + ec90_layer
}
# plot the controls
for(k in c(1:length(control_frame_list))){
dose_control<-control_doses[[k]]
frame<-control_frame_list[[k]][which(control_frame_list[[k]][,8]==dose_control),]
single_layer_control<- geom_hline(aes_(yintercept=frame[,1],
linetype=label_list_control[[k]],colour=
label_list_sigmoid[[ceiling(k/2)]]))
ribbon_layer_control<- geom_ribbon(aes_(ymin=frame[,1]-(frame[,6]*frame[,1]),
ymax=frame[,1]-(frame[,6]*frame[,1]),
x=x_values))
#final_plot<-final_plot+single_layer_control
}
pretty_plot<-final_plot +
scale_shape_manual(values = c("EC10"=0,
"EC50"=1,
"EC90"=2)) +
scale_linetype_manual(values=c("longdash","dotdash",
"longdash","dotdash",
"longdash","dotdash",
"longdash","dotdash")) +
scale_colour_manual(values = colour_palette) +
scale_x_continuous(breaks = doses_experiment,
labels = labels_x_axis,
limits = xlim,
trans = "log10") +
scale_y_continuous(limits = ylim, labels=formatter) +
guides(colour=guide_legend(title = "Strains",nrow=4)) +
# ggtitle(plot_title) +
xlab(xlabel) +
ylab(expression(paste("Fluorescence x","10"^"3","(a.u.)",sep="")))+
theme(panel.grid.minor = element_blank(),
legend.position = c(0.2,0.7),
legend.title = element_blank(),
legend.key.height = unit(0.35,"cm"),
legend.key = element_blank(),
legend.box.background = element_rect(linetype = "solid", colour="black"),
legend.margin = margin(t=0.04,r=0.1,b=0.1,l=0.1,unit="cm"),
panel.border = element_blank(),
axis.line = element_line(),
# axis.text = element_text(size=24),
# axis.title = element_text(size=24),
axis.title = element_text(hjust = 1),
panel.background = element_blank()
)
return(pretty_plot)
}
descriptives_to_use<-c(1,6,11,16)
control_descriptives_to_use<-c(3,5,8,10,13,15,18,20)
xlim<-c(0.15,600)
ylim<-c(0,NA)
dose_control<-c("400","400","200","200","200","200","400","400")
colour_palette<-c("#7a1f1f","#cb3434","#ff3333","#ffcccc")
#c("pink","firebrick2","tomato3","darkorange1")
#c("#02085F","#3A05FA","#6E88FC","#91DEFD")
list_of_starting_points<-list(
c(30000,0.8,20,1,5000),
c(7000,0.1,2,1,5000),
c(40000,0.5,5,1,5000),
c(40000,0.5,2,1,5000)
)
# pick which strains/time_points you want to plot, and their labels
frame_list<-descriptives[descriptives_to_use]
label_list_sigmoid<-c("YPeth","SGly","SDpro","SDmin")
label_list_control<-c("ype_norepressor","ype_70",
"gly_norepressor","gly_70",
"pro_norepressor","pro_70",
"sd_norepressor","sd_70")
control_frame_error<-df_list[control_descriptives_to_use]
# pick your controls
control_frame_list<-descriptives[control_descriptives_to_use]
#define x axis doses and the labels for plotting
doses_experiment<-c(0.19,1,5,20,60,200,600)
labels_x_axis<- c("0","1","5","20","60","200","600")
# replace 0 values in the doses with 0.1
for(i in c(1:length(frame_list))){
frame_list[[i]][1,8]<-0.19
}
# generate log distributed x values for smoother line fitting.
library(emdbook)
x_values<-lseq(min(frame_list[[1]][,8]),
max(600),1000)
strain_list<-label_list_sigmoid
# apply the fitting to each frame with its own individual starting points.
sigmoid_fit_parameters<-mapply(function_curve_fitting,frame_list,list_of_starting_points,
SIMPLIFY = FALSE)
ec_list<-lapply(sigmoid_fit_parameters,f_ecs)
fit<-lapply(sigmoid_fit_parameters,f_sigmoid_fit,x_values)
sigmoid_plot<-f_plot_sigmoid_curves_overlaid(fit,frame_list, control_frame_list,
label_list_control, xlim, ylim, dose_control)
sigmoid_plot
ggsave(sigmoid_plot,filename =  "overlaid.jpeg", path=output_path, height=6, width=9.04, units = "cm")
ggsave(spearman+ylab(""),filename =  "overlaid_spearman.jpeg", path=output_path,height=6, width=9.04, units = "cm")
ggsave(sigmoid_plot+ylab(""),filename =  "overlaid.jpeg", path=output_path, height=6, width=9.04, units = "cm")
ggsave(f_derivative_plot+ylab(""),filename =  "overlaid_derivative.jpeg", path=output_path, height=6, width=9.04
, units = "cm")
descriptives_to_use<-c(1,6,11,16)
control_descriptives_to_use<-c(3,5,8,10,13,15,18,20)
xlim<-c(0.15,600)
ylim<-c(0,NA)
dose_control<-c("400","400","200","200","200","200","400","400")
colour_palette<-c("#7a1f1f","#cb3434","#ff3333","#ffcccc")
#c("pink","firebrick2","tomato3","darkorange1")
#c("#02085F","#3A05FA","#6E88FC","#91DEFD")
list_of_starting_points<-list(
c(30000,0.8,20,1,5000),
c(7000,0.1,2,1,5000),
c(40000,0.5,5,1,5000),
c(40000,0.5,2,1,5000)
)
# pick which strains/time_points you want to plot, and their labels
frame_list<-descriptives[descriptives_to_use]
label_list_sigmoid<-c("YPeth","SGly","SDpro","SDmin")
label_list_control<-c("ype_norepressor","ype_70",
"gly_norepressor","gly_70",
"pro_norepressor","pro_70",
"sd_norepressor","sd_70")
control_frame_error<-df_list[control_descriptives_to_use]
# pick your controls
control_frame_list<-descriptives[control_descriptives_to_use]
#define x axis doses and the labels for plotting
doses_experiment<-c(0.19,1,5,20,60,200,600)
labels_x_axis<- c("0","1","5","20","60","200","600")
# replace 0 values in the doses with 0.1
for(i in c(1:length(frame_list))){
frame_list[[i]][1,8]<-0.19
}
# generate log distributed x values for smoother line fitting.
library(emdbook)
x_values<-lseq(min(frame_list[[1]][,8]),
max(600),1000)
strain_list<-label_list_sigmoid
# apply the fitting to each frame with its own individual starting points.
sigmoid_fit_parameters<-mapply(function_curve_fitting,frame_list,list_of_starting_points,
SIMPLIFY = FALSE)
ec_list<-lapply(sigmoid_fit_parameters,f_ecs)
fit<-lapply(sigmoid_fit_parameters,f_sigmoid_fit,x_values)
sigmoid_plot<-f_plot_sigmoid_curves_overlaid(fit,frame_list, control_frame_list,
label_list_control, xlim, ylim, dose_control)
sigmoid_plot
ggsave(sigmoid_plot+ylab(""),filename =  "overlaid.jpeg", path=output_path, height=6, width=9.04, units = "cm")
#---------------------------------------------------------------------------------------------------
## derivative plot
x_values_d<-seq(0,
max(frame_list[[1]][,8]),length.out=10000)
sigmoid_d_fit<-lapply(sigmoid_fit_parameters,f_d_sigmoid_fit,x_values_d)
ec_y_values<-f_ec_yvalues(sigmoid_d_fit,ec_list)
ylims<-c(0,10000)
strains<-c("a","a","a","a")
colour_by_strain<-TRUE
f_derivative_plot<-f_plot_sigmoid_d(x_values_d, sigmoid_d_fit, label_list_sigmoid, ylims,ec_y_values,strains)
f_derivative_plot
ggsave(f_derivative_plot+ylab(""),filename =  "overlaid_derivative.jpeg", path=output_path, height=6, width=9.04
, units = "cm")
#---------------------------------------------------------------------------------------------------
## spearman plot
spearman_dfs<-descriptives_to_use
label_list_spearman<-label_list_sigmoid
spearman_list<-df_with_size[spearman_dfs]
# replace 0 values in the doses with 0.19
for(i in c(1:length(spearman_list))){
for(k in c(1:nrow(spearman_list[[i]]))){
if(spearman_list[[i]][k,4]== 0){
spearman_list[[i]][k,4]<-0.19
}
}
}
spearman_doses_list<-list(unique(frame_list[[1]][,8]),unique(frame_list[[2]][,8]),
unique(frame_list[[3]][,8]),unique(frame_list[[4]][,8]))
variances<-vector("list",length(spearman_list))
for(k in c(1:length(spearman_list))){
variance<-vector()
spearman_doses<-spearman_doses_list[[k]]
for(i in spearman_doses){
dataframe<-spearman_list[[k]][which(spearman_list[[k]][,4]==i),]
var<-cor(dataframe[,3],dataframe[,5], method = "spearman")
variance<-c(variance,var)
}
variances[[k]]<-variance
}
spearman<-f_spearman_plot(variances,0,label_list_spearman,"a", spearman_doses, 0.35)
spearman
ggsave(spearman+ylab(""),filename =  "overlaid_spearman.jpeg", path=output_path,height=6, width=9.04, units = "cm")
