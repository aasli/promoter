library("minpack.lm")
# pick which strains/time_points you want to plot, and their labels
frame_list<-descriptives[descriptives_to_use_sigmoid]
label_list_sigmoid<-label_list[labels_to_use]
#define x axis doses and the labels for plotting
doses_experiment<-frame_list[[1]][,8]
breaks_sigmoid<-c(0.1,doses_experiment[c(2:length(doses_experiment))])
labels_x_axis<-c(0,frame_list[[1]][c(2:nrow(frame_list[[1]])),8])
# replace 0 values in the doses with 0.1
for(i in c(1:length(frame_list))){
frame_list[[i]][1,8]<-0.1
}
# define the controls for putting on the plot
control_list<-descriptives[controls_to_use_sigmoid]
control_list_sigmoid<-label_list[controls_to_use_sigmoid]
# generate log distributed x values for smoother line fitting.
library(emdbook)
x_values<-lseq(min(frame_list[[1]][,8]),
max(frame_list[[1]][,8]),1000)
# apply the fitting to each frame with its own individual starting points.
sigmoid_fit_descriptives<-mapply(function_curve_fitting,frame_list,list_of_starting_points,
SIMPLIFY = FALSE)
# plot the fitted lines and the individual data points
sigmoid_plot<-f_plot_sigmoid_curves(sigmoid_fit_descriptives,frame_list, control_list,
control_list_sigmoid)
f_save(sigmoid_plot,paste("sigmoid_fit_weighted_5pr-dob.jpeg",time_point_sigmoid,sep = "_"),
output_folder=output_path,output_path="",
height=height_sigmoid, width=width_sigmoid)
list_of_starting_points<-list(
c(40000,0.5,5,-0.4,5000),
c(40000,0.01,1,-7,5000)
)
library("minpack.lm")
# pick which strains/time_points you want to plot, and their labels
frame_list<-descriptives[descriptives_to_use_sigmoid]
label_list_sigmoid<-label_list[labels_to_use]
#define x axis doses and the labels for plotting
doses_experiment<-frame_list[[1]][,8]
breaks_sigmoid<-c(0.1,doses_experiment[c(2:length(doses_experiment))])
labels_x_axis<-c(0,frame_list[[1]][c(2:nrow(frame_list[[1]])),8])
# replace 0 values in the doses with 0.1
for(i in c(1:length(frame_list))){
frame_list[[i]][1,8]<-0.1
}
# define the controls for putting on the plot
control_list<-descriptives[controls_to_use_sigmoid]
control_list_sigmoid<-label_list[controls_to_use_sigmoid]
# generate log distributed x values for smoother line fitting.
library(emdbook)
x_values<-lseq(min(frame_list[[1]][,8]),
max(frame_list[[1]][,8]),1000)
# apply the fitting to each frame with its own individual starting points.
sigmoid_fit_descriptives<-mapply(function_curve_fitting,frame_list,list_of_starting_points,
SIMPLIFY = FALSE)
# plot the fitted lines and the individual data points
sigmoid_plot<-f_plot_sigmoid_curves(sigmoid_fit_descriptives,frame_list, control_list,
control_list_sigmoid)
f_save(sigmoid_plot,paste("sigmoid_fit_weighted_5pr-dob.jpeg",time_point_sigmoid,sep = "_"),
output_folder=output_path,output_path="",
height=height_sigmoid, width=width_sigmoid)
list_of_starting_points<-list(
c(40000,0.5,5,-1.5,5000),
c(40000,0.01,1,-21,5000)
)
library("minpack.lm")
# pick which strains/time_points you want to plot, and their labels
frame_list<-descriptives[descriptives_to_use_sigmoid]
label_list_sigmoid<-label_list[labels_to_use]
#define x axis doses and the labels for plotting
doses_experiment<-frame_list[[1]][,8]
breaks_sigmoid<-c(0.1,doses_experiment[c(2:length(doses_experiment))])
labels_x_axis<-c(0,frame_list[[1]][c(2:nrow(frame_list[[1]])),8])
# replace 0 values in the doses with 0.1
for(i in c(1:length(frame_list))){
frame_list[[i]][1,8]<-0.1
}
# define the controls for putting on the plot
control_list<-descriptives[controls_to_use_sigmoid]
control_list_sigmoid<-label_list[controls_to_use_sigmoid]
# generate log distributed x values for smoother line fitting.
library(emdbook)
x_values<-lseq(min(frame_list[[1]][,8]),
max(frame_list[[1]][,8]),1000)
# apply the fitting to each frame with its own individual starting points.
sigmoid_fit_descriptives<-mapply(function_curve_fitting,frame_list,list_of_starting_points,
SIMPLIFY = FALSE)
# plot the fitted lines and the individual data points
sigmoid_plot<-f_plot_sigmoid_curves(sigmoid_fit_descriptives,frame_list, control_list,
control_list_sigmoid)
f_save(sigmoid_plot,paste("sigmoid_fit_weighted_5pr-dob.jpeg",time_point_sigmoid,sep = "_"),
output_folder=output_path,output_path="",
height=height_sigmoid, width=width_sigmoid)
list_of_starting_points<-list(
c(40000,-0.5,5,-1.5,5000),
c(40000,-0.01,1,-21,5000)
)
library("minpack.lm")
# pick which strains/time_points you want to plot, and their labels
frame_list<-descriptives[descriptives_to_use_sigmoid]
label_list_sigmoid<-label_list[labels_to_use]
#define x axis doses and the labels for plotting
doses_experiment<-frame_list[[1]][,8]
breaks_sigmoid<-c(0.1,doses_experiment[c(2:length(doses_experiment))])
labels_x_axis<-c(0,frame_list[[1]][c(2:nrow(frame_list[[1]])),8])
# replace 0 values in the doses with 0.1
for(i in c(1:length(frame_list))){
frame_list[[i]][1,8]<-0.1
}
# define the controls for putting on the plot
control_list<-descriptives[controls_to_use_sigmoid]
control_list_sigmoid<-label_list[controls_to_use_sigmoid]
# generate log distributed x values for smoother line fitting.
library(emdbook)
x_values<-lseq(min(frame_list[[1]][,8]),
max(frame_list[[1]][,8]),1000)
# apply the fitting to each frame with its own individual starting points.
sigmoid_fit_descriptives<-mapply(function_curve_fitting,frame_list,list_of_starting_points,
SIMPLIFY = FALSE)
# plot the fitted lines and the individual data points
sigmoid_plot<-f_plot_sigmoid_curves(sigmoid_fit_descriptives,frame_list, control_list,
control_list_sigmoid)
f_save(sigmoid_plot,paste("sigmoid_fit_weighted_5pr-dob.jpeg",time_point_sigmoid,sep = "_"),
output_folder=output_path,output_path="",
height=height_sigmoid, width=width_sigmoid)
list_of_starting_points<-list(
c(40000,-0.5,5,1.5,5000),
c(40000,-0.01,1,21,5000)
)
library("minpack.lm")
# pick which strains/time_points you want to plot, and their labels
frame_list<-descriptives[descriptives_to_use_sigmoid]
label_list_sigmoid<-label_list[labels_to_use]
#define x axis doses and the labels for plotting
doses_experiment<-frame_list[[1]][,8]
breaks_sigmoid<-c(0.1,doses_experiment[c(2:length(doses_experiment))])
labels_x_axis<-c(0,frame_list[[1]][c(2:nrow(frame_list[[1]])),8])
# replace 0 values in the doses with 0.1
for(i in c(1:length(frame_list))){
frame_list[[i]][1,8]<-0.1
}
# define the controls for putting on the plot
control_list<-descriptives[controls_to_use_sigmoid]
control_list_sigmoid<-label_list[controls_to_use_sigmoid]
# generate log distributed x values for smoother line fitting.
library(emdbook)
x_values<-lseq(min(frame_list[[1]][,8]),
max(frame_list[[1]][,8]),1000)
# apply the fitting to each frame with its own individual starting points.
sigmoid_fit_descriptives<-mapply(function_curve_fitting,frame_list,list_of_starting_points,
SIMPLIFY = FALSE)
# plot the fitted lines and the individual data points
sigmoid_plot<-f_plot_sigmoid_curves(sigmoid_fit_descriptives,frame_list, control_list,
control_list_sigmoid)
f_save(sigmoid_plot,paste("sigmoid_fit_weighted_5pr-dob.jpeg",time_point_sigmoid,sep = "_"),
output_folder=output_path,output_path="",
height=height_sigmoid, width=width_sigmoid)
list_of_starting_points<-list(
c(40000,0.5,5,10,5000),
c(40000,0.01,1,100,5000)
)
library("minpack.lm")
# pick which strains/time_points you want to plot, and their labels
frame_list<-descriptives[descriptives_to_use_sigmoid]
label_list_sigmoid<-label_list[labels_to_use]
#define x axis doses and the labels for plotting
doses_experiment<-frame_list[[1]][,8]
breaks_sigmoid<-c(0.1,doses_experiment[c(2:length(doses_experiment))])
labels_x_axis<-c(0,frame_list[[1]][c(2:nrow(frame_list[[1]])),8])
# replace 0 values in the doses with 0.1
for(i in c(1:length(frame_list))){
frame_list[[i]][1,8]<-0.1
}
# define the controls for putting on the plot
control_list<-descriptives[controls_to_use_sigmoid]
control_list_sigmoid<-label_list[controls_to_use_sigmoid]
# generate log distributed x values for smoother line fitting.
library(emdbook)
x_values<-lseq(min(frame_list[[1]][,8]),
max(frame_list[[1]][,8]),1000)
# apply the fitting to each frame with its own individual starting points.
sigmoid_fit_descriptives<-mapply(function_curve_fitting,frame_list,list_of_starting_points,
SIMPLIFY = FALSE)
# plot the fitted lines and the individual data points
sigmoid_plot<-f_plot_sigmoid_curves(sigmoid_fit_descriptives,frame_list, control_list,
control_list_sigmoid)
f_save(sigmoid_plot,paste("sigmoid_fit_weighted_5pr-dob.jpeg",time_point_sigmoid,sep = "_"),
output_folder=output_path,output_path="",
height=height_sigmoid, width=width_sigmoid)
list_of_starting_points<-list(
c(40000,0.5,5,0.001,5000),
c(40000,0.01,1,100,5000)
)
library("minpack.lm")
# pick which strains/time_points you want to plot, and their labels
frame_list<-descriptives[descriptives_to_use_sigmoid]
label_list_sigmoid<-label_list[labels_to_use]
#define x axis doses and the labels for plotting
doses_experiment<-frame_list[[1]][,8]
breaks_sigmoid<-c(0.1,doses_experiment[c(2:length(doses_experiment))])
labels_x_axis<-c(0,frame_list[[1]][c(2:nrow(frame_list[[1]])),8])
# replace 0 values in the doses with 0.1
for(i in c(1:length(frame_list))){
frame_list[[i]][1,8]<-0.1
}
# define the controls for putting on the plot
control_list<-descriptives[controls_to_use_sigmoid]
control_list_sigmoid<-label_list[controls_to_use_sigmoid]
# generate log distributed x values for smoother line fitting.
library(emdbook)
x_values<-lseq(min(frame_list[[1]][,8]),
max(frame_list[[1]][,8]),1000)
# apply the fitting to each frame with its own individual starting points.
sigmoid_fit_descriptives<-mapply(function_curve_fitting,frame_list,list_of_starting_points,
SIMPLIFY = FALSE)
# plot the fitted lines and the individual data points
sigmoid_plot<-f_plot_sigmoid_curves(sigmoid_fit_descriptives,frame_list, control_list,
control_list_sigmoid)
f_save(sigmoid_plot,paste("sigmoid_fit_weighted_5pr-dob.jpeg",time_point_sigmoid,sep = "_"),
output_folder=output_path,output_path="",
height=height_sigmoid, width=width_sigmoid)
list_of_starting_points<-list(
c(40000,0.5,5,0.001,5000),
c(40000,0.01,1,0.01,5000)
)
f_plot_sigmoid_curves<-
# plot the fitted line and the individual data points.
function(fit_list,frame_list, control_list,control_list_sigmoid){
final_plot<-ggplot()
# plot the lines
for (i in c(1:length(fit_list))){
single_layer_line<- geom_line(aes_(x=x_values, y=fit_list[[i]],
colour=label_list_sigmoid[[i]]),size=1)
final_plot<-final_plot+single_layer_line
}
# plot the individual data points
for (j in c(1:length(frame_list))){
single_layer_point<- geom_point(aes_(x=frame_list[[j]][,8],y=frame_list[[j]][,1],
colour=label_list_sigmoid[[j]]))
final_plot<-final_plot+single_layer_point
}
# plot controls
for (k in c(1:length(control_list))){
single_layer_line<- geom_line(aes_(x=control_list[[k]][,8][c(1,24)],
y=control_list[[k]][,1][c(1,24)],
colour=control_list_sigmoid[[k]]))
final_plot<-final_plot+single_layer_line
}
pretty_plot<-final_plot +
scale_colour_manual(values = colour_palette) +
scale_x_log10(breaks = breaks_sigmoid,
labels = labels_x_axis) +
guides(colour=guide_legend(title = "Strains",nrow=2)) +
#scale_y_log10() +
ggtitle(plot_title) +
xlab(xlabel) +
ylab("Fluorescence (a.u.)") +
theme_bw() +
theme(panel.grid.minor = element_blank(),
legend.direction = "horizontal", legend.position = "bottom") +
expand_limits(x=0.3)
return(pretty_plot)
}
library("minpack.lm")
# pick which strains/time_points you want to plot, and their labels
frame_list<-descriptives[descriptives_to_use_sigmoid]
label_list_sigmoid<-label_list[labels_to_use]
#define x axis doses and the labels for plotting
doses_experiment<-frame_list[[1]][,8]
breaks_sigmoid<-c(0.1,doses_experiment[c(2:length(doses_experiment))])
labels_x_axis<-c(0,frame_list[[1]][c(2:nrow(frame_list[[1]])),8])
# replace 0 values in the doses with 0.1
for(i in c(1:length(frame_list))){
frame_list[[i]][1,8]<-0.1
}
# define the controls for putting on the plot
control_list<-descriptives[controls_to_use_sigmoid]
control_list_sigmoid<-label_list[controls_to_use_sigmoid]
# generate log distributed x values for smoother line fitting.
library(emdbook)
x_values<-lseq(min(frame_list[[1]][,8]),
max(frame_list[[1]][,8]),1000)
# apply the fitting to each frame with its own individual starting points.
sigmoid_fit_descriptives<-mapply(function_curve_fitting,frame_list,list_of_starting_points,
SIMPLIFY = FALSE)
# plot the fitted lines and the individual data points
sigmoid_plot<-f_plot_sigmoid_curves(sigmoid_fit_descriptives,frame_list, control_list,
control_list_sigmoid)
f_save(sigmoid_plot,paste("sigmoid_fit_weighted_5pr-dob.jpeg",time_point_sigmoid,sep = "_"),
output_folder=output_path,output_path="",
height=height_sigmoid, width=width_sigmoid)
list_of_starting_points<-list(
c(40000,0.5,5,0.01,5000),
c(40000,0.01,1,1,5000)
)
library("minpack.lm")
# pick which strains/time_points you want to plot, and their labels
frame_list<-descriptives[descriptives_to_use_sigmoid]
label_list_sigmoid<-label_list[labels_to_use]
#define x axis doses and the labels for plotting
doses_experiment<-frame_list[[1]][,8]
breaks_sigmoid<-c(0.1,doses_experiment[c(2:length(doses_experiment))])
labels_x_axis<-c(0,frame_list[[1]][c(2:nrow(frame_list[[1]])),8])
# replace 0 values in the doses with 0.1
for(i in c(1:length(frame_list))){
frame_list[[i]][1,8]<-0.1
}
# define the controls for putting on the plot
control_list<-descriptives[controls_to_use_sigmoid]
control_list_sigmoid<-label_list[controls_to_use_sigmoid]
# generate log distributed x values for smoother line fitting.
library(emdbook)
x_values<-lseq(min(frame_list[[1]][,8]),
max(frame_list[[1]][,8]),1000)
# apply the fitting to each frame with its own individual starting points.
sigmoid_fit_descriptives<-mapply(function_curve_fitting,frame_list,list_of_starting_points,
SIMPLIFY = FALSE)
# plot the fitted lines and the individual data points
sigmoid_plot<-f_plot_sigmoid_curves(sigmoid_fit_descriptives,frame_list, control_list,
control_list_sigmoid)
f_save(sigmoid_plot,paste("sigmoid_fit_weighted_5pr-dob.jpeg",time_point_sigmoid,sep = "_"),
output_folder=output_path,output_path="",
height=height_sigmoid, width=width_sigmoid)
list_of_starting_points<-list(
c(40000,0.5,5,0.01,5000),
c(40000,0.01,1,0.1,5000)
)
library("minpack.lm")
# pick which strains/time_points you want to plot, and their labels
frame_list<-descriptives[descriptives_to_use_sigmoid]
label_list_sigmoid<-label_list[labels_to_use]
#define x axis doses and the labels for plotting
doses_experiment<-frame_list[[1]][,8]
breaks_sigmoid<-c(0.1,doses_experiment[c(2:length(doses_experiment))])
labels_x_axis<-c(0,frame_list[[1]][c(2:nrow(frame_list[[1]])),8])
# replace 0 values in the doses with 0.1
for(i in c(1:length(frame_list))){
frame_list[[i]][1,8]<-0.1
}
# define the controls for putting on the plot
control_list<-descriptives[controls_to_use_sigmoid]
control_list_sigmoid<-label_list[controls_to_use_sigmoid]
# generate log distributed x values for smoother line fitting.
library(emdbook)
x_values<-lseq(min(frame_list[[1]][,8]),
max(frame_list[[1]][,8]),1000)
# apply the fitting to each frame with its own individual starting points.
sigmoid_fit_descriptives<-mapply(function_curve_fitting,frame_list,list_of_starting_points,
SIMPLIFY = FALSE)
# plot the fitted lines and the individual data points
sigmoid_plot<-f_plot_sigmoid_curves(sigmoid_fit_descriptives,frame_list, control_list,
control_list_sigmoid)
f_save(sigmoid_plot,paste("sigmoid_fit_weighted_5pr-dob.jpeg",time_point_sigmoid,sep = "_"),
output_folder=output_path,output_path="",
height=height_sigmoid, width=width_sigmoid)
function_curve_fitting<-
# this function fits a sigmoid curve to the datapoints.
# a is the upper asymptote, b is the steepest slope, c is the x axis value at b, d is the lower
# asymptote. you can define these individually for every curve.
# a negative b gives you an inverse sigmoid, a positive one gives you a sigmoid.
# the function creates a list of fitted values, one for each "frame" input.
function(frame,list_of_starting_points){
f_sigmoid <- function(params, x) {
( params[5] + ((params[1]-params[5]) / ((1 + ((x/params[3])^params[2]))^
(params[4]))))
}
x = frame[,8]
y = frame[,1]
a<-list_of_starting_points[[1]]
b<-list_of_starting_points[[2]]
c<-list_of_starting_points[[3]]
d<-list_of_starting_points[[4]]
e<-list_of_starting_points[[5]]
# fitting
fitmodel <- nlsLM(y ~  ( e+ (a-e)/((1 + ((x/c)^b))^(d))), start=list(a=a,b=b,c=c, d=d,e=e),
weights = (1/(frame[,5])), control = list(maxiter=1000))
# a * (((c^2)*(x+d)^2) /
#        (c^2)*(x+d)2^
# get the coefficients
params=coef(fitmodel)
sigmoid_fit <- f_sigmoid(params,x_values)
print(params)
return(sigmoid_fit)
}
sigmoid_fit_descriptives<-mapply(function_curve_fitting,frame_list,list_of_starting_points,
SIMPLIFY = FALSE)
# plot the fitted lines and the individual data points
sigmoid_plot<-f_plot_sigmoid_curves(sigmoid_fit_descriptives,frame_list, control_list,
control_list_sigmoid)
list_of_starting_points<-list(
c(40000,0.5,5,0.4,5000),
c(40000,0.01,1,7,5000)
)
sigmoid_fit_descriptives<-mapply(function_curve_fitting,frame_list,list_of_starting_points,
SIMPLIFY = FALSE)
# plot the fitted lines and the individual data points
sigmoid_plot<-f_plot_sigmoid_curves(sigmoid_fit_descriptives,frame_list, control_list,
control_list_sigmoid)
100/90
function_curve_fitting<-
# this function fits a sigmoid curve to the datapoints.
# a is the upper asymptote, b is the steepest slope, c is the x axis value at b, d is the lower
# asymptote. you can define these individually for every curve.
# a negative b gives you an inverse sigmoid, a positive one gives you a sigmoid.
# the function creates a list of fitted values, one for each "frame" input.
function(frame,list_of_starting_points){
f_sigmoid <- function(params, x) {
( params[5] + ((params[1]-params[5]) / ((1 + ((x/params[3])^params[2]))^
(params[4]))))
}
x = frame[,8]
y = frame[,1]
a<-list_of_starting_points[[1]]
b<-list_of_starting_points[[2]]
c<-list_of_starting_points[[3]]
d<-list_of_starting_points[[4]]
e<-list_of_starting_points[[5]]
# fitting
fitmodel <- nlsLM(y ~  ( e+ (a-e)/((1 + ((x/c)^b))^(d))), start=list(a=a,b=b,c=c, d=d,e=e),
weights = (1/(frame[,5])), control = list(maxiter=1000))
# calculate ec50, ec90 and ec10
ec50<-params[3]*(((2^(1/params[4]))-1))^(1/params[2])
ec90<-params[3]*((((100/90)^(1/params[4]))-1))^(1/params[2])
ec10<-params[3]*((((10)^(1/params[4]))-1))^(1/params[2])
ec_list<-c(ec10,ec50,ec90)
print(ec_list)
# get the coefficients
params=coef(fitmodel)
sigmoid_fit <- f_sigmoid(params,x_values)
print(params)
return(sigmoid_fit)
}
sigmoid_fit_descriptives<-mapply(function_curve_fitting,frame_list,list_of_starting_points,
SIMPLIFY = FALSE)
# plot the fitted lines and the individual data points
sigmoid_plot<-f_plot_sigmoid_curves(sigmoid_fit_descriptives,frame_list, control_list,
control_list_sigmoid)
function_curve_fitting<-
# this function fits a sigmoid curve to the datapoints.
# a is the upper asymptote, b is the steepest slope, c is the x axis value at b, d is the lower
# asymptote. you can define these individually for every curve.
# a negative b gives you an inverse sigmoid, a positive one gives you a sigmoid.
# the function creates a list of fitted values, one for each "frame" input.
function(frame,list_of_starting_points){
f_sigmoid <- function(params, x) {
( params[5] + ((params[1]-params[5]) / ((1 + ((x/params[3])^params[2]))^
(params[4]))))
}
x = frame[,8]
y = frame[,1]
a<-list_of_starting_points[[1]]
b<-list_of_starting_points[[2]]
c<-list_of_starting_points[[3]]
d<-list_of_starting_points[[4]]
e<-list_of_starting_points[[5]]
# fitting
fitmodel <- nlsLM(y ~  ( e+ (a-e)/((1 + ((x/c)^b))^(d))), start=list(a=a,b=b,c=c, d=d,e=e),
weights = (1/(frame[,5])), control = list(maxiter=1000))
print(ec_list)
# get the coefficients
params=coef(fitmodel)
# calculate ec50, ec90 and ec10
ec50<-params[3]*(((2^(1/params[4]))-1))^(1/params[2])
ec90<-params[3]*((((100/90)^(1/params[4]))-1))^(1/params[2])
ec10<-params[3]*((((10)^(1/params[4]))-1))^(1/params[2])
ec_list<-c(ec10,ec50,ec90)
sigmoid_fit <- f_sigmoid(params,x_values)
print(params)
return(sigmoid_fit)
}
sigmoid_fit_descriptives<-mapply(function_curve_fitting,frame_list,list_of_starting_points,
SIMPLIFY = FALSE)
# plot the fitted lines and the individual data points
sigmoid_plot<-f_plot_sigmoid_curves(sigmoid_fit_descriptives,frame_list, control_list,
control_list_sigmoid)
function_curve_fitting<-
# this function fits a sigmoid curve to the datapoints.
# a is the upper asymptote, b is the steepest slope, c is the x axis value at b, d is the lower
# asymptote. you can define these individually for every curve.
# a negative b gives you an inverse sigmoid, a positive one gives you a sigmoid.
# the function creates a list of fitted values, one for each "frame" input.
function(frame,list_of_starting_points){
f_sigmoid <- function(params, x) {
( params[5] + ((params[1]-params[5]) / ((1 + ((x/params[3])^params[2]))^
(params[4]))))
}
x = frame[,8]
y = frame[,1]
a<-list_of_starting_points[[1]]
b<-list_of_starting_points[[2]]
c<-list_of_starting_points[[3]]
d<-list_of_starting_points[[4]]
e<-list_of_starting_points[[5]]
# fitting
fitmodel <- nlsLM(y ~  ( e+ (a-e)/((1 + ((x/c)^b))^(d))), start=list(a=a,b=b,c=c, d=d,e=e),
weights = (1/(frame[,5])), control = list(maxiter=1000))
# get the coefficients
params=coef(fitmodel)
# calculate ec50, ec90 and ec10
ec50<-params[3]*(((2^(1/params[4]))-1))^(1/params[2])
ec90<-params[3]*((((100/90)^(1/params[4]))-1))^(1/params[2])
ec10<-params[3]*((((10)^(1/params[4]))-1))^(1/params[2])
ec_list<-c(ec10,ec50,ec90)
print(ec_list)
sigmoid_fit <- f_sigmoid(params,x_values)
print(params)
return(sigmoid_fit)
}
sigmoid_fit_descriptives<-mapply(function_curve_fitting,frame_list,list_of_starting_points,
SIMPLIFY = FALSE)
# plot the fitted lines and the individual data points
sigmoid_plot<-f_plot_sigmoid_curves(sigmoid_fit_descriptives,frame_list, control_list,
control_list_sigmoid)
