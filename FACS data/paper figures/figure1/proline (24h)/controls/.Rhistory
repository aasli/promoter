list_of_starting_points<-list(
c(7000,0.1,2,5000),
c(7000,0.1,2,3000)
# c(7000,0.1,2,5000),
# c(7000,0.1,2,3000),
# c(10000,0.3,6,3000),
# c(10000,0.5,2,5000)
)
# pick which strains/time_points you want to plot, and their labels
frame_list<-descriptives[descriptives_to_use]
label_list_sigmoid<-label_list[labels_to_use]
label_list_control<-label_list[control_descriptives_to_use]
control_frame_error<-df_list[control_descriptives_to_use]
# pick your controls
control_frame_list<-descriptives[control_descriptives_to_use]
for(i in c(2,3)){
control_frame_list[[i]][,1]<-control_frame_list[[i]][,1]
}
#define x axis doses and the labels for plotting
doses_experiment<-c(0.3,0.5,1,3,5,10,20,30,60,200)
labels_x_axis<-c("0","0.5","1","3","5","10","20","30", "60","200")
# replace 0 values in the doses with 0.1
for(i in c(1:length(frame_list))){
frame_list[[i]][1,8]<-0.3
}
# generate log distributed x values for smoother line fitting.
library(emdbook)
x_values<-lseq(min(frame_list[[1]][,8]),
max(frame_list[[1]][,8]),1000)
# apply the fitting to each frame with its own individual starting points.
sigmoid_fit_descriptives<-mapply(function_curve_fitting,frame_list,list_of_starting_points,
SIMPLIFY = FALSE)
sigmoid_plot<-f_plot_sigmoid_curves_single(sigmoid_fit_descriptives,frame_list, control_frame_list,
dose_control, label_list_control, xlim, ylim)
sigmoid_plot
ggsave(sigmoid_plot,filename =  "glycerol.jpeg", path=output_path, height=10, width=15)
# creating the individual plots
library("minpack.lm")
## plotting the sigmoid curves.
f_plot_sigmoid_curves_single<-
# plot the fitted line and the individual data points.
function(fit_list,frame_list, control_frame_list,dose_control,label_list_control, xlim, ylim){
formatter<-function(x){x/1000}
final_plot<-ggplot()
# plot the lines
for (i in c(1:length(fit_list))){
single_layer_line<- geom_line(aes_(x=x_values, y=fit_list[[i]],
colour=label_list_sigmoid[[i]]),size=2)
final_plot<-final_plot+single_layer_line
}
# plot the individual data points
for (j in c(1:length(frame_list))){
single_layer_point<- geom_point(aes_(x=frame_list[[j]][,8],y=frame_list[[j]][,1],
colour=label_list_sigmoid[[j]]), size=2.5)
final_plot<-final_plot+single_layer_point
}
# plot the controls
for(k in c(1:length(control_frame_list))){
frame<-control_frame_list[[k]][which(control_frame_list[[k]][,8]==dose_control),]
single_layer_control<- geom_hline(aes_(yintercept=frame[,1],
linetype=label_list_control[[k]]), colour="black",
size=1)
ribbon_layer_control<- geom_ribbon(aes_(ymin=frame[,1]-(frame[,6]*frame[,1]),
ymax=frame[,1]-(frame[,6]*frame[,1]),
x=x_values))
final_plot<-final_plot+single_layer_control
# final_plot<-final_plot +ribbon_layer_control
}
pretty_plot<-final_plot +
scale_linetype_manual(values=c("longdash","dotted", "dotdash")) +
scale_colour_manual(values = colour_palette) +
scale_x_continuous(breaks = doses_experiment,
labels = labels_x_axis,
limits = xlim,
trans = "log10") +
scale_y_continuous(limits = ylim, labels=formatter) +
guides(colour=guide_legend(title = "Strains",nrow=2)) +
# ggtitle(plot_title) +
xlab(xlabel) +
ylab(expression(paste("Fluorescence x","10"^"3","(a.u.)",sep=""))) +
theme_bw() +
theme(panel.grid.minor = element_blank(),
legend.direction = "horizontal", legend.position = "none",
panel.border = element_blank(),
axis.line = element_line(size=1),
axis.text = element_text(size=24),
axis.title = element_text(size=24))
return(pretty_plot)
}
descriptives_to_use<-c(11,12)
control_descriptives_to_use<-c(13,14,15)
labels_to_use<-c(11,12)
dose_control<-"200"
xlim<-c(0.5,32)
ylim<-c(0,NA)
colour_palette<-c("darkred","lightblue")
list_of_starting_points<-list(
c(10000,0.5,2),
c(10000,0.3,3)
# c(7000,0.1,2,5000),
# c(7000,0.1,2,3000),
# c(10000,0.3,6,3000),
# c(10000,0.5,2,5000)
)
# pick which strains/time_points you want to plot, and their labels
frame_list<-descriptives[descriptives_to_use]
label_list_sigmoid<-label_list[labels_to_use]
label_list_control<-label_list[control_descriptives_to_use]
control_frame_error<-df_list[control_descriptives_to_use]
# pick your controls
control_frame_list<-descriptives[control_descriptives_to_use]
for(i in c(2,3)){
control_frame_list[[i]][,1]<-control_frame_list[[i]][,1]
}
#define x axis doses and the labels for plotting
doses_experiment<-c(0.5,1,3,5,10,20,30,60,200)
labels_x_axis<-c("0.5","1","3","5","10","20","30", "60","200")
# replace 0 values in the doses with 0.1
for(i in c(1:length(frame_list))){
frame_list[[i]]<-frame_list[[i]][-1,]
}
# generate log distributed x values for smoother line fitting.
library(emdbook)
x_values<-lseq(min(frame_list[[1]][,8]),
max(frame_list[[1]][,8]),1000)
# apply the fitting to each frame with its own individual starting points.
sigmoid_fit_descriptives<-mapply(function_curve_fitting,frame_list,list_of_starting_points,
SIMPLIFY = FALSE)
sigmoid_plot<-f_plot_sigmoid_curves_single(sigmoid_fit_descriptives,frame_list, control_frame_list,
dose_control, label_list_control, xlim, ylim)
sigmoid_plot
ggsave(sigmoid_plot,filename =  "proline.jpeg", path=output_path, height=10, width=15)
# creating the individual plots
library("minpack.lm")
## plotting the sigmoid curves.
f_plot_sigmoid_curves_single<-
# plot the fitted line and the individual data points.
function(fit_list,frame_list, control_frame_list,dose_control,label_list_control, xlim, ylim){
formatter<-function(x){x/1000}
final_plot<-ggplot()
# plot the lines
for (i in c(1:length(fit_list))){
single_layer_line<- geom_line(aes_(x=x_values, y=fit_list[[i]],
colour=label_list_sigmoid[[i]]),size=2)
final_plot<-final_plot+single_layer_line
}
# plot the individual data points
for (j in c(1:length(frame_list))){
single_layer_point<- geom_point(aes_(x=frame_list[[j]][,8],y=frame_list[[j]][,1],
colour=label_list_sigmoid[[j]]), size=2.5)
final_plot<-final_plot+single_layer_point
}
# plot the controls
for(k in c(1:length(control_frame_list))){
frame<-control_frame_list[[k]][which(control_frame_list[[k]][,8]==dose_control),]
single_layer_control<- geom_hline(aes_(yintercept=frame[,1],
linetype=label_list_control[[k]]), colour="black",
size=2)
ribbon_layer_control<- geom_ribbon(aes_(ymin=frame[,1]-(frame[,6]*frame[,1]),
ymax=frame[,1]-(frame[,6]*frame[,1]),
x=x_values))
final_plot<-final_plot+single_layer_control
# final_plot<-final_plot +ribbon_layer_control
}
pretty_plot<-final_plot +
scale_linetype_manual(values=c("longdash","dotted", "dotdash")) +
scale_colour_manual(values = colour_palette) +
scale_x_continuous(breaks = doses_experiment,
labels = labels_x_axis,
limits = xlim,
trans = "log10") +
scale_y_continuous(limits = ylim, labels=formatter) +
guides(colour=guide_legend(title = "Strains",nrow=2)) +
# ggtitle(plot_title) +
xlab(xlabel) +
ylab(expression(paste("Fluorescence x","10"^"3","(a.u.)",sep=""))) +
theme_bw() +
theme(panel.grid.minor = element_blank(),
legend.direction = "horizontal", legend.position = "none",
panel.border = element_blank(),
axis.line = element_line(size=1),
axis.text = element_text(size=24),
axis.title = element_text(size=24))
return(pretty_plot)
}
descriptives_to_use<-c(6,7)
control_descriptives_to_use<-c(8,9,10)
labels_to_use<-c(6,7)
dose_control<-"0"
xlim<-c(0.3,NA)
ylim<-c(0,NA)
colour_palette<-c("darkred","lightblue")
list_of_starting_points<-list(
c(7000,0.1,2,5000),
c(7000,0.1,2,3000)
# c(7000,0.1,2,5000),
# c(7000,0.1,2,3000),
# c(10000,0.3,6,3000),
# c(10000,0.5,2,5000)
)
# pick which strains/time_points you want to plot, and their labels
frame_list<-descriptives[descriptives_to_use]
label_list_sigmoid<-label_list[labels_to_use]
label_list_control<-label_list[control_descriptives_to_use]
control_frame_error<-df_list[control_descriptives_to_use]
# pick your controls
control_frame_list<-descriptives[control_descriptives_to_use]
for(i in c(2,3)){
control_frame_list[[i]][,1]<-control_frame_list[[i]][,1]
}
#define x axis doses and the labels for plotting
doses_experiment<-c(0.3,0.5,1,3,5,10,20,30,60,200)
labels_x_axis<-c("0","0.5","1","3","5","10","20","30", "60","200")
# replace 0 values in the doses with 0.1
for(i in c(1:length(frame_list))){
frame_list[[i]][1,8]<-0.3
}
# generate log distributed x values for smoother line fitting.
library(emdbook)
x_values<-lseq(min(frame_list[[1]][,8]),
max(frame_list[[1]][,8]),1000)
# apply the fitting to each frame with its own individual starting points.
sigmoid_fit_descriptives<-mapply(function_curve_fitting,frame_list,list_of_starting_points,
SIMPLIFY = FALSE)
sigmoid_plot<-f_plot_sigmoid_curves_single(sigmoid_fit_descriptives,frame_list, control_frame_list,
dose_control, label_list_control, xlim, ylim)
sigmoid_plot
ggsave(sigmoid_plot,filename =  "glycerol.jpeg", path=output_path, height=10, width=15)
# for proline I removed the dose 0 since we have a strange autofluorescence lowering effect of aTc. For the same reason I used controls that have 200ng/mL aTc on them and not the 0 versions like the others.
# creating the individual plots
library("minpack.lm")
## plotting the sigmoid curves.
f_plot_sigmoid_curves_single<-
# plot the fitted line and the individual data points.
function(fit_list,frame_list, control_frame_list,dose_control,label_list_control, xlim, ylim){
formatter<-function(x){x/1000}
final_plot<-ggplot()
# plot the lines
for (i in c(1:length(fit_list))){
single_layer_line<- geom_line(aes_(x=x_values, y=fit_list[[i]],
colour=label_list_sigmoid[[i]]),size=2)
final_plot<-final_plot+single_layer_line
}
# plot the individual data points
for (j in c(1:length(frame_list))){
single_layer_point<- geom_point(aes_(x=frame_list[[j]][,8],y=frame_list[[j]][,1],
colour=label_list_sigmoid[[j]]), size=2.5)
final_plot<-final_plot+single_layer_point
}
# plot the controls
for(k in c(1:length(control_frame_list))){
frame<-control_frame_list[[k]][which(control_frame_list[[k]][,8]==dose_control),]
single_layer_control<- geom_hline(aes_(yintercept=frame[,1],
linetype=label_list_control[[k]]), colour="black",
size=2)
ribbon_layer_control<- geom_ribbon(aes_(ymin=frame[,1]-(frame[,6]*frame[,1]),
ymax=frame[,1]-(frame[,6]*frame[,1]),
x=x_values))
final_plot<-final_plot+single_layer_control
# final_plot<-final_plot +ribbon_layer_control
}
pretty_plot<-final_plot +
scale_linetype_manual(values=c("longdash","dotted", "dotdash")) +
scale_colour_manual(values = colour_palette) +
scale_x_continuous(breaks = doses_experiment,
labels = labels_x_axis,
limits = xlim,
trans = "log10") +
scale_y_continuous(limits = ylim, labels=formatter) +
guides(colour=guide_legend(title = "Strains",nrow=2)) +
# ggtitle(plot_title) +
xlab(xlabel) +
ylab(expression(paste("Fluorescence x","10"^"3","(a.u.)",sep=""))) +
theme_bw() +
theme(panel.grid.minor = element_blank(),
legend.direction = "horizontal", legend.position = "none",
panel.border = element_blank(),
axis.line = element_line(size=1),
axis.text = element_text(size=24),
axis.title = element_text(size=24))
return(pretty_plot)
}
descriptives_to_use<-c(11,12)
control_descriptives_to_use<-c(13,14,15)
labels_to_use<-c(11,12)
dose_control<-"200"
xlim<-c(0.5,32)
ylim<-c(0,NA)
colour_palette<-c("darkred","lightblue")
list_of_starting_points<-list(
c(10000,0.5,2),
c(10000,0.3,3)
# c(7000,0.1,2,5000),
# c(7000,0.1,2,3000),
# c(10000,0.3,6,3000),
# c(10000,0.5,2,5000)
)
# pick which strains/time_points you want to plot, and their labels
frame_list<-descriptives[descriptives_to_use]
label_list_sigmoid<-label_list[labels_to_use]
label_list_control<-label_list[control_descriptives_to_use]
control_frame_error<-df_list[control_descriptives_to_use]
# pick your controls
control_frame_list<-descriptives[control_descriptives_to_use]
for(i in c(2,3)){
control_frame_list[[i]][,1]<-control_frame_list[[i]][,1]
}
#define x axis doses and the labels for plotting
doses_experiment<-c(0.5,1,3,5,10,20,30,60,200)
labels_x_axis<-c("0.5","1","3","5","10","20","30", "60","200")
# replace 0 values in the doses with 0.1
for(i in c(1:length(frame_list))){
frame_list[[i]]<-frame_list[[i]][-1,]
}
# generate log distributed x values for smoother line fitting.
library(emdbook)
x_values<-lseq(min(frame_list[[1]][,8]),
max(frame_list[[1]][,8]),1000)
# apply the fitting to each frame with its own individual starting points.
sigmoid_fit_descriptives<-mapply(function_curve_fitting,frame_list,list_of_starting_points,
SIMPLIFY = FALSE)
sigmoid_plot<-f_plot_sigmoid_curves_single(sigmoid_fit_descriptives,frame_list, control_frame_list,
dose_control, label_list_control, xlim, ylim)
sigmoid_plot
ggsave(sigmoid_plot,filename =  "proline.jpeg", path=output_path, height=10, width=15)
source("common_functions.R")
source("stat_functions.R")
source("plotting_functions.R")
t0p1_file<-"180116_operator&TetR_comparisons/p1"
pattern_read<-"Specimen_001"
output_path<-"C:/Users/aslia/Desktop/pisi/ETH/master project/labbook/paper/mock figures 100218/4-5op comparisons"
# create folders named size, svf, histograms, boxplots under this directory.
columns<-c(3,6,7) # usually fsc-h, ssc-h, and 488C-h
fsch_column<-1 # the index in "columns"
ssch_column<-2 # the index in "columns"
size_subset<-FALSE # set to true to subset based on fsch/ssch
fsc_h_lower_limit<-50000
fsc_h_upper_limit<-73000
ssc_h_lower_limit<-0
ssc_h_upper_limit<-200000
## naming & labels
strain_names<-c("2551","2564","2565","2562","2573","2575","2577","2566",
"2598","2599","2601","2602","2603","2612","2643_1","2643_2","2644_1","2644_2","2645_1","2645_2",
"2647_1","2647_2","2648_1","2648_2","2649_1","2649_2","2650_1","2650_2","2651_1","2651_2","2652_1","2652_2",
"2653_1","2653_2","2654_1","2654_2","2655_1","2655_2",
"2656_1","2656_2","2657_1","2657_2","2658_1","2658_2","2659_1","2659_2","2660_1","2660_2","2661_1","2661_2",
"2562","2512","2525","2642","2641","2662_1","2662_2","2646",
"70","2420","2569",
"2","68"
)
label_list<-c(
"2op", #1
"3op", #2
"4op", #3
"2op + pAct1_TetR_tCyc1", #4
"3op + pAct1_TetR_tCyc1", #5
"4op + pAct1_TetR_tCyc1", #6
"5op + pAct1_TetR_tCyc1", #7
"5op", #8
"4op, RAP1+A", #9
"4op, G + GCR1(upstream)", #10
"4op, GCR1(downstream)full", #11
"4op TATA box: TATAAAGA", #12
"4op TATA box: TATAAATA", #13
"4op RAP1+AAC, GCR1(downstream)full", #14
"4op RAP1+AAC, G+GCRu, GCRd(full)_1", #15 chosen
"4op RAP1+AAC, G+GCRu, GCRd(full)_2", #16
"4op, rep.unmod.RAP1+GCR1_1", #17 chosen
"4op, rep.unmod.RAP1+GCR1_2", #18
"4op, rep.mod.RAP1+GCR1_1", #19 chosen
"4op, rep.mod.RAP1+GCR1_2", #20
"4op, RAP1+A + pAct1_TetR_tCyc1_1 ", #21 chosen
"4op, RAP1+A + pAct1_TetR_tCyc1_2", #22
"G + GCR1(upstream) + pAct1_TetR_tCyc1_1", #23 chosen
"G + GCR1(upstream) + pAct1_TetR_tCyc1_2", #24
"4op, GCR1(downstream)full + pAct1_TetR_tCyc1_1", #25 chosen
"4op, GCR1(downstream)full + pAct1_TetR_tCyc1_2", #26
"4op TATA box: TATAAAGA + pAct1_TetR_tCyc1_1", #27 chosen
"4op TATA box: TATAAAGA + pAct1_TetR_tCyc1_2", #28
"4op TATA box: TATAAATA + pAct1_TetR_tCyc1_1", #29 chosen
"4op TATA box: TATAAATA + pAct1_TetR_tCyc1_2", #30
"4op RAP1+AAC, GCR1(downstream)full + pAct1_TetR_tCyc1_1", #31 chosen
"4op RAP1+AAC, GCR1(downstream)full + pAct1_TetR_tCyc1_2", #32
"4op RAP1+AAC, GCRd(full) + pAct1_TetR_tCyc1_1", #33 chosen
"4op RAP1+AAC, GCRd(full) + pAct1_TetR_tCyc1_2", #34
"4op, rep.unmod.RAP1+GCR1 + pAct1_TetR_tCyc1_1", #35 chosen
"4op, rep.unmod.RAP1+GCR1 + pAct1_TetR_tCyc1_2", #36
"4op, rep.mod.RAP1+GCR1 + pAct1_TetR_tCyc1_1", #37 chosen
"4op, rep.mod.RAP1+GCR1 + pAct1_TetR_tCyc1_2", #38
"5op (RAP1+A, GCRd full) + pAct1_TetR_tCyc1_1", #39 chosen
"5op (RAP1+A, GCRd full) + pAct1_TetR_tCyc1_2", #40
"5op (RAP1+A, GCRd full&repRAP1) + pAct1_TetR_tCyc1_1", #41  chosen
"5op (RAP1+A, GCRd full&repRAP1) + pAct1_TetR_tCyc1_2", #42
"5op (RAP1+A, GCRd full&repRAP1GCR1) + pAct1_TetR_tCyc1_1", #43 chosen
"5op (RAP1+A, GCRd full&repRAP1GCR1) + pAct1_TetR_tCyc1_2", #44
"5op (RAP1+A, GCRd full)_1", #45 chosen
"5op (RAP1+A, GCRd full)_2", #46
"5op (RAP1+A, GCRd full&repRAP1)_1", #47 chosen
"5op (RAP1+A, GCRd full&repRAP1)_2", #48
"5op (RAP1+A, GCRd full&repRAP1GCR1)_1", #49 chosen
"5op (RAP1+A, GCRd full&repRAP1GCR1)_2", #50
"2op(s) + pAct1_TetR_NLS", #51
"2op(s) + pAct1_TetR_NLS-GST", #52
"2op(s) + pAct1_TetR_NLS-GST-NLS", #53
"2op(s) + pAct1_TetR_NLS-MBP", #54
"2op(s) + pAct1_TetR_NLS-MBP-NLS", #55
"2op(s) + pAct1_TetR_NLS-TUP1_1", #56 chosen
"2op(s) + pAct1_TetR_NLS-TUP1_2", #57
"2op(s) + pVph1_TetR_NLS-MBP-NLS", #58
"fry70", #59
"2op(s)", #60
"pTDH3_citrine", #61
"fry2", #62
"fry68" #63
)
## which strains to compare:
list_of_sequences<-list(
c(8,3,2,1),
c(7,6,5,4),
c(13,12,14,11,10,9,3),
c(29,27,31,25,23,21,6),
c(49,47,45,8),
c(43,41,39,7)
)
title_of_sequences<-c("operator placement",
"operator placement_tetr",
"4op modifications",
"4op modifications_tetr",
"5op modifications",
"5op modifications_tetr"
)
mypalette<-c("#ffb419","#5e52e6","#a8d551","#8e00ab","#006512","#d038cc","#917f00","#ff6fe4","#144c21",
"#c10094","#4fdbcb","#ff4385","#009074","#c0004d","#00b9da","#b54700","#006dcb","#ff6a61",
"#00939a","#9f0022","#017ab5","#762700","#b5a6ff","#4d5100","#f599ff","#d6c688","#582b80",
"#ff91b8")
#781e41
#9e5b58)
### boxplots
ylimits_box<-list(c(0,100000),
c(0,50000),
c(0,80000),
c(0,10000),
c(0,100000),
c(0,8000)
)
height_box<-10 # saving dimensions
width_box<-15
t0p1<-f_read(t0p1_file,pattern_read)
#-----------------------------------------------------------------------------------------------
## create the dataframe list
df_list<-f_df_comparison(t0p1,columns,fsch_column, ssch_column, fsc_h_lower_limit,
fsc_h_upper_limit,ssc_h_lower_limit, ssc_h_upper_limit)
names(df_list)<-strain_names
#-----------------------------------------------------------------------------------------------
## boxplots
#first melt dataframes you want to put on the plot into one dataframe
boxplot_frames<-lapply(list_of_sequences,f_melt, df_list, label_list,"488 [C]-H" )
boxplots<-mapply(f_boxplot, boxplot_frames, ylimits_box, SIMPLIFY = FALSE) # create boxplots
names(boxplots)<-title_of_sequences
list_of_sequences<-list(
c(61,8,3,2,1),
c(59,7,6,5,4),
c(61,13,12,14,11,10,9,3),
c(59,29,27,31,25,23,21,6),
c(61,49,47,45,8),
c(59,43,41,39,7)
)
## read fcs files as a flowset
t0p1<-f_read(t0p1_file,pattern_read)
#-----------------------------------------------------------------------------------------------
## create the dataframe list
df_list<-f_df_comparison(t0p1,columns,fsch_column, ssch_column, fsc_h_lower_limit,
fsc_h_upper_limit,ssc_h_lower_limit, ssc_h_upper_limit)
names(df_list)<-strain_names
#-----------------------------------------------------------------------------------------------
## boxplots
#first melt dataframes you want to put on the plot into one dataframe
boxplot_frames<-lapply(list_of_sequences,f_melt, df_list, label_list,"488 [C]-H" )
boxplots<-mapply(f_boxplot, boxplot_frames, ylimits_box, SIMPLIFY = FALSE) # create boxplots
names(boxplots)<-title_of_sequences
# then save
mapply(f_save,boxplots,names(boxplots),
MoreArgs = list(output_folder=output_path,height=height_box,
width=width_box),SIMPLIFY = FALSE)
mapply(f_save,boxplots,names(boxplots),
MoreArgs = list(output_folder=output_path,height=height_box,
width=width_box),SIMPLIFY = FALSE)
list_of_sequences<-list(
c(61,8,3,2,1),
c(59,7,6,5,4),
c(61,13,12,11,10,9,3),
c(59,29,27,25,23,21,6),
c(61,49,47,45,8),
c(59,43,41,39,7)
)
## read fcs files as a flowset
t0p1<-f_read(t0p1_file,pattern_read)
#-----------------------------------------------------------------------------------------------
## create the dataframe list
df_list<-f_df_comparison(t0p1,columns,fsch_column, ssch_column, fsc_h_lower_limit,
fsc_h_upper_limit,ssc_h_lower_limit, ssc_h_upper_limit)
names(df_list)<-strain_names
#-----------------------------------------------------------------------------------------------
## boxplots
#first melt dataframes you want to put on the plot into one dataframe
boxplot_frames<-lapply(list_of_sequences,f_melt, df_list, label_list,"488 [C]-H" )
boxplots<-mapply(f_boxplot, boxplot_frames, ylimits_box, SIMPLIFY = FALSE) # create boxplots
names(boxplots)<-title_of_sequences
# then save
mapply(f_save,boxplots,names(boxplots),
MoreArgs = list(output_folder=output_path,height=height_box,
width=width_box),SIMPLIFY = FALSE)
